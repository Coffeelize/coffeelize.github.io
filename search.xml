<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Final Cut Pro 常用快捷键总结及练习</title>
    <url>/posts/3ac6e730.html</url>
    <content><![CDATA[<p>事情是这样的：英语视听说这门课程布置了短文朗读和小组讨论作业，需要将作业打包成一个视频。从编辑视频的角度来说不难，就是将几个视频合并成一个视频，给视频中的出现的角色添加姓名（比如通过添加字幕来实现）；而刚好 Windows 笔记本放实验室了，只带了一台刚买的 Mac，剪辑操作极其痛苦。<br>比如：</p>
<ul>
<li>Final Cut Pro 当中的预览功能「当时候也不知道这个叫啥」，鼠标一划过去就会自动预览，而且自带倍速效果，那个倍速播放的声音真难受</li>
<li>添加完字幕之后，导出的是 itt 的字幕格式，普通的播放器都不支持加载这种格式的字幕</li>
<li>导出视频不知道导出什么类型的视频「参数不知道调」，导致几个几十兆的视频剪辑一下瞬间变成一个 G</li>
<li>……</li>
</ul>
<p>利用假期的时间，个人认为稍微学习一下 Mac 上的剪辑软件还是挺有用的，至少对于应付临时作业来说。至于选择哪一款软件学习，首选最易上手的 Final Cut Pro。</p>
<p>以下为我创建的基于 quizlet 的 Final Cut Pro 快捷键练习测试，接下来可以开始测试啦：</p>
<!-- 以下内容为quizlet测试内嵌网页 -->
<iframe src="https://quizlet.com/655782103/match/embed?i=24q5fr&amp;x=1jj1" height="500" width="100%" style="border:0"></iframe>]]></content>
      <tags>
        <tag>Final cut Pro</tag>
        <tag>quizlet</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX 不快速的入门笔记</title>
    <url>/posts/15e36c1c.html</url>
    <content><![CDATA[<p>说明：</p>
<ul>
<li>以下代码块中的内容均匀 LaTeX 语法</li>
<li>参考视频： <a href="https://www.bilibili.com/video/BV1s7411U7Pr?p=2">刘海洋・LaTeX 不快速的入门 - 跟着大神学习最纯正的 LaTeX 知识</a></li>
<li>在线表格转 latex：<a href="https://tablesgenerator.com/latex_tables">https://tablesgenerator.com/latex_tables</a></li>
<li> 推荐：在线 Latex 公式编辑器 <a href="https://www.codecogs.com/latex/eqneditor.php?lang=zh-cn">Equation Editor</a></li>
<li> 推荐博客：<a href="https://liam.page/categories/LaTeX/">始终</a></li>
</ul>
<span id="more"></span>

<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>命令以反斜杠开头，后面可跟花括号加参数，后面跟中括号表示可选参数</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\documentclass[11pt,twoside,a4paper]{article}</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\documentclass[UTF8]{ctexart}</span><br><span class="line">% 这里的 ctexart，支持简体中文和英文的混排，指定文档的编码类型为 UTF8 格式</span><br></pre></td></tr></tbody></table></figure>

<p>UTF8 是 TeXworks 编辑器默认使用的编码类型</p>
<p>中文的文档类为 ctexart（Chinese tex article）</p>
<p>.tex⇒.pdf<br>英文推荐：pdflatex<br>中文推荐：xelatex</p>
<h2 id="源代码结构"><a href="#源代码结构" class="headerlink" title="源代码结构"></a>源代码结构</h2><p>documentclass 和 begin 之间的内容为导言（前言 preamble）「有点类似 HTML 当中的 head 标签」<br>介于 begin 和 end 之间的内容为正文「类似于 HTML 中是 body」</p>
<h2 id="格式化命令"><a href="#格式化命令" class="headerlink" title="格式化命令"></a>格式化命令</h2><p> 加粗：\textbf {要加粗的内容}<br> 说明：bf 也就是 bold font 的缩写<br> 斜体：\textit {要斜体的内容}<br> 下划线：underline {下划线内容}</p>
<p> 添加一个段落：输入两个换行符；「单独一个换行符只会生成一个空格」</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">% 章节</span><br><span class="line">\section{章节的名字}</span><br><span class="line">第一个章节中的内容</span><br><span class="line">\subsection{第一个章节的子章节}</span><br><span class="line">\subsubsection{三级章节}</span><br><span class="line">\section{另一章节的名字}</span><br><span class="line">第二个章节中的内容</span><br></pre></td></tr></tbody></table></figure>

<h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>Latex 本身不支持插图功能，需要使用 graphicx 宏包辅助支持<br>如何控制图片的大小呢？在 graphicx 命令后加可选参数</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\graphicx[width=0.5\textwidth]{这里是图片的名字}</span><br><span class="line">% textwidth 表示当前文本区域的宽度，常用可选参数有：width,height,scale,angle</span><br></pre></td></tr></tbody></table></figure>

<p>如果要为图片添加图注信息，则将图片嵌套在 figure 环境当中</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\begin{figure}</span><br><span class="line">\centering  % 将图片居中对齐</span><br><span class="line">\includegraphics{图片名字}</span><br><span class="line">\caption{这个是图片的标题}</span><br><span class="line">\end{figure}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>有序列表：enumerate<br>无序列表：itemize</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\begin{itemize}</span><br><span class="line">\item 列表项 1</span><br><span class="line">\item 列表项 2</span><br><span class="line">\item 列表项 3</span><br><span class="line">\end{itemize}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p>行内公式：可以使用 inline equation 直接在段落内添加公式，写在两个美元符号中间<br>行间公式：使用 equation 环境，「可以将环境简写为」</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\[</span><br><span class="line">公式内容</span><br><span class="line">\]</span><br></pre></td></tr></tbody></table></figure>

<p>一般符号：α，β……<br>指数上下标形式：^ and _<br>分式和根式</p>
<p>推荐：在线 Latex 公式编辑器 <a href="https://www.codecogs.com/latex/eqneditor.php?lang=zh-cn">Equation Editor</a></p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>创建环境 tabular</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\end{itemize}</span><br><span class="line">\begin{tabular}{ c c c}</span><br><span class="line">a11 &amp; a12 &amp; a13 \\</span><br><span class="line">\hline</span><br><span class="line">a21 &amp; a22 &amp; a23 \\</span><br><span class="line">\hline</span><br><span class="line">\end{tabular}</span><br></pre></td></tr></tbody></table></figure>

<p>说明：</p>
<ul>
<li>ccc 表示共表格共 3 列，且三列为居中对齐，如果是 CRR，表示第一列居中对齐，第二三列为右对齐</li>
<li>单元格与单元格用 &amp; 隔开</li>
<li>表格一行结束使用两个反斜杠 \</li>
<li> 如果在参数 ccc 中插入竖线 | c|c|c|，可为表格添加垂直方向的边框</li>
<li>水平方向的边框通过 <code>\hline</code> 添加<br>和图片类似，如果表注，需要将表格添加的表的环境中「开始是 tabular，需要嵌入 table 环境中」，再使用 \caption {} 添加表注</li>
</ul>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>百分号开头，和 matlab 相同</p>
<h2 id="正文文本"><a href="#正文文本" class="headerlink" title="正文文本"></a>正文文本</h2><p>一个换行符等同于一个空格，多个空格的效果与一个相同<br>自然段分段式空一行</p>
<p>标题：title、author、date——maketitle<br>摘要 / 前言：abstract 环境 /chapter<br>目录：tableofcontents<br>章节：chapter，section<br>附录：appendix+chapter 或 section<br>文献：bibliography（自动生成参考文献）<br>索引：printindex</p>
<p>章节层次结构：</p>
<ul>
<li>part：可选的最高层</li>
<li> chapter：report，book 类最高层</li>
<li> section：article 类最高层</li>
<li> subsection</li>
<li>subsubsection：默认不编号，不编目录</li>
<li> paragraph：默认不编号，不编目录</li>
<li> subparagraph：默认不编号，不编目录</li>
</ul>
<h3 id="正文符号"><a href="#正文符号" class="headerlink" title="正文符号"></a>正文符号</h3><p>一些符号被 latex 宏语言占用，需要以命令形式输入：<br>比如反斜杠：<code>\textbackslash</code></p>
<h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><ul>
<li>行内公式</li>
<li>列表（显示公式）公式<ul>
<li>简单不编号的公式使用命令 <code>\[ \]</code></li>
<li>基本的编号的公式用 <strong>eq</strong>uation 环境（<strong>beq</strong> tab 键即可出来）</li>
<li>更复杂的结构，使用 amsmath 宏包…</li>
</ul>
</li>
</ul>
<p>上标和下标：<code>^ and _</code><br>分式：<code>frac{分子}{分母}</code><br>根式：<code>sqrt[次数]{根号下}</code><br>矩阵：amsmath 宏包提供了专门的矩阵环境，matrix，pmatrix，bmatrix 等</p>
<h3 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h3><ul>
<li>数学字母</li>
<li>普通符号<ul>
<li>乘号：\times</li>
<li> 除号：\div</li>
</ul>
</li>
<li> 二元运算符</li>
<li>二元关系符：大于小于等于等</li>
<li>括号</li>
<li>标点：逗号，<code>\colon</code> 冒号，<code>\semicolon</code> 分号</li>
<li>分式使用 \frac {分子}{分母} 形式书写；分式在行间正常大小显示，而如果在行中，则会被压缩</li>
<li>根式使用 \sqrt [n 次]{内容}</li>
</ul>
<h3 id="数学公式-1"><a href="#数学公式-1" class="headerlink" title="数学公式"></a>数学公式</h3><p>amsmath 是基本的数学工具包，在包含数学公式的文档中几乎无处不在，mathtools 则对 amsmath 做了一些补充和增强</p>
<h3 id="科技功能"><a href="#科技功能" class="headerlink" title="科技功能"></a>科技功能</h3><p>siunitx：数字单位的一揽子解决方案</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\num{-1.2345e95}</span><br><span class="line">\SI{12}{m/s}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="编写化学式"><a href="#编写化学式" class="headerlink" title="编写化学式"></a>编写化学式</h3><p>chemformula 宏包（\ch 命令）</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\ch{2 H2 + O2 -&gt; 2 H2O}</span><br></pre></td></tr></tbody></table></figure>

<p><img data-src="https://s2.loli.net/2022/04/11/GusSoQfzDnMPVkW.png" alt="使用Latex编辑化学反应式"></p>
<h3 id="列表与文本块"><a href="#列表与文本块" class="headerlink" title="列表与文本块"></a>列表与文本块</h3><h3 id="抄录代码"><a href="#抄录代码" class="headerlink" title="抄录代码"></a>抄录代码</h3><p>\verb | 这里是代码 |<br>\verbatim 环境</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\begin{verbatim}</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"> inputs('hello world!')</span><br><span class="line">\end{verbatim}</span><br></pre></td></tr></tbody></table></figure>

<p><img data-src="https://s2.loli.net/2022/04/11/um2tfF4CIDr1QeR.png" alt="使用Latex抄录代码"></p>
<h4 id="高级代码：语法高亮"><a href="#高级代码：语法高亮" class="headerlink" title="高级代码：语法高亮"></a>高级代码：语法高亮</h4><p>使用 listings 宏包</p>
<h3 id="算法结构"><a href="#算法结构" class="headerlink" title="算法结构"></a>算法结构</h3><ul>
<li>clrscode 宏包</li>
<li> algorithm2e 宏包</li>
<li>…</li>
</ul>
<h2 id="图表与浮动环境"><a href="#图表与浮动环境" class="headerlink" title="图表与浮动环境"></a>图表与浮动环境</h2><p>画表图：使用 tabular 环境<br>表格转换为 latex 代码：<a href="https://tablesgenerator.com/latex_tables">https://tablesgenerator.com/latex_tables</a></p>
<p><img data-src="https://s2.loli.net/2022/04/11/xdvmRY2ZhGIBeaw.png" alt="在线表格转Latex"></p>
<p>功能各异的表格宏包</p>
<ul>
<li>单元格处理：multirow、makecell</li>
<li> 长表格：<strong>longtable</strong>、xtab</li>
<li> 表线控制：booktabs（三线表）、diagbox（斜线表）</li>
<li>综合应用：tabu</li>
<li>…</li>
</ul>
<h3 id="插图"><a href="#插图" class="headerlink" title="插图"></a>插图</h3><p>graphics 宏包提供 \includegraphics 命令</p>
<h4 id="代码画图"><a href="#代码画图" class="headerlink" title="代码画图"></a>代码画图</h4><p>优先使用外部工具绘图，矢量图 Lnkscape（开源），Illustrator，甚至是 powerpoint（保存为 PDF 格式），数学图形使用 matlab 之类</p>
<h3 id="浮动体"><a href="#浮动体" class="headerlink" title="浮动体"></a>浮动体</h3><ul>
<li>figure 环境</li>
<li> table 环境<br>其他环境可以使用 float 宏包得到<br>浮动体的标题使用 \caption 命令得到，自动编号</li>
</ul>
<h2 id="自动化工具"><a href="#自动化工具" class="headerlink" title="自动化工具"></a>自动化工具</h2><ul>
<li>自动目录</li>
<li>交叉引用</li>
<li> PDF 的链接与书签（hyperref 宏包）</li>
<li>BIBTex<ul>
<li>.bib 数据库<ul>
<li> JabRef：管理 bib 数据库</li>
</ul>
</li>
<li> \cite 命令引用</li>
<li>末尾 \bibliography {math} 引用</li>
</ul>
</li>
</ul>
<h2 id="设置文献格式"><a href="#设置文献格式" class="headerlink" title="设置文献格式"></a>设置文献格式</h2><p>选用合适的.bst 格式，比如 plainnat，gbt7714-plain<br>natbib 与作者 - 年格式<br>利用 custom-bib 产生定制的格式文件<br>bilatex+biber：文献处理的新方式</p>
<h2 id="设计文档格式"><a href="#设计文档格式" class="headerlink" title="设计文档格式"></a>设计文档格式</h2><h3 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h3><p>格式与内容分离，不要在意细节上 Latex 的一大卖点</p>
<h3 id="使用内容相关的命令与环境"><a href="#使用内容相关的命令与环境" class="headerlink" title="使用内容相关的命令与环境"></a>使用内容相关的命令与环境</h3><p>只使用语义相关的的命令<br>比如推荐 emph，不推荐使用 textit<br>推荐 caption {流程图}，不推荐 textbf {图 1:} 流程图</p>
<h3 id="使用宏包"><a href="#使用宏包" class="headerlink" title="使用宏包"></a>使用宏包</h3><h2 id="格式控制功能"><a href="#格式控制功能" class="headerlink" title="格式控制功能"></a>格式控制功能</h2><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>rmfamily,textrm<br>sffamily,textsf<br>ttfamily,texttt</p>
<h3 id="字号"><a href="#字号" class="headerlink" title="字号"></a>字号</h3><p>zihao{5},zihao{-3}</p>
<h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>\centering,\raggedleft,\raggedright</p>
<h3 id="空白间距"><a href="#空白间距" class="headerlink" title="空白间距"></a>空白间距</h3><p>\hspace{2cm},vspace{3cm}</p>
<h2 id="版面布局"><a href="#版面布局" class="headerlink" title="版面布局"></a>版面布局</h2><p>geometry 宏包<br>fancyhdr 宏包（设置页眉页脚）</p>
<h3 id="分页断行"><a href="#分页断行" class="headerlink" title="分页断行"></a>分页断行</h3><p>linebreak、<code>\\</code>(一般表格的时候使用)<br>pagebreak，newpage，clearpage，cleardoublepage</p>
<h3 id="盒子"><a href="#盒子" class="headerlink" title="盒子"></a>盒子</h3><p>\mbox {内容}<br>\parbox {4em}{内容}，minipage</p>
<h2 id="格式应用于文档"><a href="#格式应用于文档" class="headerlink" title="格式应用于文档"></a>格式应用于文档</h2><h3 id="使用在导言区单独设置格式"><a href="#使用在导言区单独设置格式" class="headerlink" title="使用在导言区单独设置格式"></a>使用在导言区单独设置格式</h3><p>直接设置相关参数：如 parindent，parskip，linespread（几倍行距），pagestyle（页眉页脚）<br>修改部分命令定义：thesection,labelenumi,descriptionlabe1,figurename<br>利用工具宏包完成设置：toclof 宏包设置目录格式</p>
<h3 id="利用自定义命令和环境"><a href="#利用自定义命令和环境" class="headerlink" title="利用自定义命令和环境"></a>利用自定义命令和环境</h3><p>例如，为程序名定义一个命令</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\newcommand\prg[1]{\textsf{#1}}</span><br><span class="line">程序 \prg{sort} 很有用</span><br></pre></td></tr></tbody></table></figure>

<p>此后，如果想要修改 sort 的样式，那么直接修改我们自定义的命令，比如</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\newcommand\prg[1]{\textbf{\huge #1}}</span><br><span class="line">% huge 可以将 sort 字体变大</span><br></pre></td></tr></tbody></table></figure>

<h3 id="章节标题"><a href="#章节标题" class="headerlink" title="章节标题"></a>章节标题</h3><p>ctex 宏包及文档类，用 \ctexset 定制，西文用 titlesec 等</p>
<h3 id="浮动标题"><a href="#浮动标题" class="headerlink" title="浮动标题"></a>浮动标题</h3><p>caption 宏包<br>texdoc caption</p>
<h3 id="列表环境的定制"><a href="#列表环境的定制" class="headerlink" title="列表环境的定制"></a>列表环境的定制</h3><p>enumitem 宏包</p>
<p>如设置列表不设置多倍行距</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">\usepackage{enumerate}</span><br><span class="line">\setlist{nosep}</span><br></pre></td></tr></tbody></table></figure>]]></content>
  </entry>
  <entry>
    <title>LaTeX 目录布局排版之简易教程</title>
    <url>/posts/6eab1a4b.html</url>
    <content><![CDATA[<p>说明：由于许多学校毕业设计所使用的 LaTeX 模板采用的文档类是 ctexbook，因此本教程针对该文档类进行说明，方便日后同学们自行设计模板。需要使用到的宏包：tocloft</p>
<span id="more"></span>

<p>测试 Tex 代码以下所示</p>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[12pt]{ctexbook}</span><br><span class="line"><span class="keyword">\usepackage</span>{tocloft}</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>{document}</span><br><span class="line">    <span class="keyword">\tableofcontents</span></span><br><span class="line">    <span class="keyword">\chapter</span>{引言}</span><br><span class="line">    <span class="keyword">\chapter</span>{这是第一章}</span><br><span class="line">    <span class="keyword">\section</span>{北京}</span><br><span class="line">    <span class="keyword">\section</span>{方法}</span><br><span class="line">    <span class="keyword">\section</span>{结果}</span><br><span class="line">    <span class="keyword">\section</span>{结论}</span><br><span class="line">    <span class="keyword">\chapter</span>{这是第二章}</span><br><span class="line">    <span class="keyword">\section</span>{北京}</span><br><span class="line">    <span class="keyword">\section</span>{方法}</span><br><span class="line">    <span class="keyword">\section</span>{结果}</span><br><span class="line">    <span class="keyword">\section</span>{结论}</span><br><span class="line">    <span class="keyword">\chapter</span>{这是第三章}</span><br><span class="line">    <span class="keyword">\section</span>{北京}</span><br><span class="line">    <span class="keyword">\section</span>{方法}</span><br><span class="line">    <span class="keyword">\section</span>{结果}</span><br><span class="line">    <span class="keyword">\section</span>{结论}</span><br><span class="line">    <span class="keyword">\chapter</span>{结论}</span><br><span class="line"><span class="keyword">\end</span>{document}</span><br></pre></td></tr></tbody></table></figure>

<p>注意：每次编译生成 PDF 之后，若对目录进行了修改，需要清理编译过程中生成的辅助文件（即以下进行的每一步需求操作均需要清理清理一遍辅助文件）。如下图以 TeXstudio 为例：<br><img data-src="https://s2.loli.net/2022/05/14/nHJ6UgwhmxrIiX8.png" alt="清理辅助文件"></p>
<h3 id="需求-1：修改章节标题格式样式"><a href="#需求-1：修改章节标题格式样式" class="headerlink" title="需求 1：修改章节标题格式样式"></a>需求 1：修改章节标题格式样式</h3><p>ctexbook 文档类在生成目录时，自动将 Chater 的章节名设置为 “第某章”，而如果只需要阿拉伯数字就行，如何设置，需求如图所示</p>
<p>在 <code>\usepackage{tocloft}</code> 的下方添加如下代码</p>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">\CTEXsetup</span>[name={,},number={<span class="keyword">\arabic</span>{chapter}}]{chapter}</span><br></pre></td></tr></tbody></table></figure>

<p>以上代码中，name={,} 表示在章节前后插入文本，表如 name={第，章} 就是 ctexbook 章节标题（Chapter）默认的格式<br><img data-src="https://s2.loli.net/2022/05/11/LoHp6jiqKFJD873.png" alt="01-修改章节标题格式样式.png"></p>
<h3 id="需求-2：设置导引符为垂直居中的小圆点"><a href="#需求-2：设置导引符为垂直居中的小圆点" class="headerlink" title="需求 2：设置导引符为垂直居中的小圆点"></a>需求 2：设置导引符为垂直居中的小圆点</h3><p>导引符（标题与页码之间的点点）为什么不能垂直居中显示呢？可不可以设置为垂直居中？<br>继续在 <code>\usepackage{tocloft}</code> 的下方添加如下代码</p>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">\CTEXsetup</span>[name={,},number={<span class="keyword">\arabic</span>{chapter}}]{chapter}</span><br><span class="line"><span class="keyword">\renewcommand</span>{<span class="keyword">\cftdot</span>}{<span class="built_in">$</span><span class="keyword">\cdot</span><span class="built_in">$</span>}</span><br></pre></td></tr></tbody></table></figure>

<p><code>\cdot</code> 表示垂直居中的小圆点符号，左右两旁添加 $ 表示位于公式的环境中<br><img data-src="https://s2.loli.net/2022/05/11/fP64LCgKwmEqBap.png" alt="02-设置导引符为垂直居中的小圆点.png"></p>
<h3 id="需求-3：设置导引符符号间距"><a href="#需求-3：设置导引符符号间距" class="headerlink" title="需求 3：设置导引符符号间距"></a>需求 3：设置导引符符号间距</h3><p>这些导引符的间隔太稀疏了，能不能紧密一点？<br>继续在 <code>\usepackage{tocloft}</code> 的下方添加如下代码</p>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">\CTEXsetup</span>[name={,},number={<span class="keyword">\arabic</span>{chapter}}]{chapter}</span><br><span class="line"><span class="keyword">\renewcommand</span>{<span class="keyword">\cftdot</span>}{<span class="built_in">$</span><span class="keyword">\cdot</span><span class="built_in">$</span>}<span class="comment">%设置垂直居中的小圆点</span></span><br><span class="line"><span class="keyword">\renewcommand</span>{<span class="keyword">\cftdotsep</span>}{1.5}<span class="comment">%设置点间距</span></span><br></pre></td></tr></tbody></table></figure>
<p><img data-src="https://s2.loli.net/2022/05/11/E9OFJxLuUyYsMmQ.png" alt="03-设置导引符符号间距.png"></p>
<h3 id="需求-4：设置章节与页码之间的导引符"><a href="#需求-4：设置章节与页码之间的导引符" class="headerlink" title="需求 4：设置章节与页码之间的导引符"></a>需求 4：设置章节与页码之间的导引符</h3><p>为什么章节标题与页码之间没有导引符（小圆点），能不能也加上？<br>继续在 <code>\usepackage{tocloft}</code> 的下方添加如下代码</p>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">\CTEXsetup</span>[name={,},number={<span class="keyword">\arabic</span>{chapter}}]{chapter}</span><br><span class="line"><span class="keyword">\renewcommand</span>{<span class="keyword">\cftdot</span>}{<span class="built_in">$</span><span class="keyword">\cdot</span><span class="built_in">$</span>}<span class="comment">%设置垂直居中的小圆点</span></span><br><span class="line"><span class="keyword">\renewcommand</span>{<span class="keyword">\cftdotsep</span>}{1.5}<span class="comment">%设置点间距</span></span><br><span class="line"><span class="keyword">\renewcommand</span><span class="keyword">\cftchapdotsep</span>{2}<span class="comment">%设置章节标题与页码间的导引符</span></span><br></pre></td></tr></tbody></table></figure>
<p><img data-src="https://s2.loli.net/2022/05/11/JNhXETOp2aYbdBc.png" alt="04-设置章节与页码之间的导引符.png"></p>
<h3 id="需求-5：设置各章节之间的间距"><a href="#需求-5：设置各章节之间的间距" class="headerlink" title="需求 5：设置各章节之间的间距"></a>需求 5：设置各章节之间的间距</h3><p>为什么章节标题与二级标题之间间隔比二级标题与二级标题之间的间隔要宽呢，能不能将这几者之间的间隔设为一致？<br>继续在 <code>\usepackage{tocloft}</code> 的下方添加如下代码</p>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">\CTEXsetup</span>[name={,},number={<span class="keyword">\arabic</span>{chapter}}]{chapter}</span><br><span class="line"><span class="keyword">\renewcommand</span>{<span class="keyword">\cftdot</span>}{<span class="built_in">$</span><span class="keyword">\cdot</span><span class="built_in">$</span>}<span class="comment">%设置垂直居中的小圆点</span></span><br><span class="line"><span class="keyword">\renewcommand</span>{<span class="keyword">\cftdotsep</span>}{1.5}<span class="comment">%设置点间距</span></span><br><span class="line"><span class="keyword">\renewcommand</span><span class="keyword">\cftchapdotsep</span>{2}<span class="comment">%设置章节标题与页码间的导引符</span></span><br><span class="line"><span class="keyword">\setlength</span>{<span class="keyword">\cftbeforechapskip</span>}{0pt}<span class="comment">%一级标题（章节标题）间隔</span></span><br><span class="line"><span class="keyword">\setlength</span>{<span class="keyword">\cftbeforesecskip</span>}{0pt}<span class="comment">%二级标题间隔</span></span><br></pre></td></tr></tbody></table></figure>

<p>当然，这里只设置了 1，2 级标题之间的间距，若想设置 3 级标题之间的间距，可以设置 <code>\setlength{\cftbeforesubsecskip}{0pt}</code><br><img data-src="https://s2.loli.net/2022/05/11/h9UZMI5e7arNCxl.png" alt="05-设置各章节之间的间距.png"></p>
<h3 id="需求-6：设置章节标题前后间距"><a href="#需求-6：设置章节标题前后间距" class="headerlink" title="需求 6：设置章节标题前后间距"></a>需求 6：设置章节标题前后间距</h3><p>目录当中如何设置显示到几级标题呢？比如我想设置只显示到三级标题就不显示了，可以设置吗？</p>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">\setcounter</span>{secnumdepth}{3}<span class="comment">%设置目录深度至三级标题</span></span><br></pre></td></tr></tbody></table></figure>

<p>除此之外，如何将目录的布局设置得更好看一些，比如将一级标题和二级标题之间的层次更加清晰，可以在章节标题段前段后添加些间隔，如下所示</p>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">\setlength</span>{<span class="keyword">\cftbeforechapskip</span>}{5pt}<span class="comment">%一级标题（章节标题）前间隔</span></span><br><span class="line"><span class="keyword">\renewcommand</span>{<span class="keyword">\cftchapafterpnum</span>}{<span class="keyword">\vspace</span>{5pt}} <span class="comment">%一级标题（章节标题）后间隔</span></span><br></pre></td></tr></tbody></table></figure>
<p><code>\vspace{5pt}</code> 表示垂直间距 5pt<br><img data-src="https://s2.loli.net/2022/05/11/xUZEGStgpLeTM7j.png" alt="06-设置章节标题前后间距.png"></p>
<h3 id="需求-7：待续"><a href="#需求-7：待续" class="headerlink" title="需求 7：待续"></a>需求 7：待续</h3><p>怎么会有那么多需求呢？这里有一些相关资料，或许可以帮助到你 q (≧▽≦q)。</p>
<ul>
<li>Latex 工作室： <a href="https://www.latexstudio.net/">Latex 工作室</a></li>
<li>简单粗暴 Latex： <a href="https://wklchris.github.io/">Kanglong Wu</a> &amp; <a href="https://github.com/wklchris/Note-by-LaTeX">《简单粗暴 LaTeX》开源仓库</a></li>
<li>雷太赫排版系统简介（第二版）：包太雷</li>
<li>参考网页： <a href="https://www.latexstudio.net/archives/334.html">LaTeX 技巧 748：如何给目录增加些空白距离</a></li>
<li>清华大学图书馆专题培训讲座《如何使用 LaTeX 排版论文》：<a href="https://github.com/tuna/thulib-latex-talk">如何使用 LaTeX 排版论文</a></li>
</ul>
]]></content>
      <tags>
        <tag>Latex</tag>
      </tags>
  </entry>
  <entry>
    <title>My New Post</title>
    <url>/posts/177574ba.html</url>
    <content><![CDATA[<p>说到做到，今天就要把博客搭建起来！！！</p>
]]></content>
  </entry>
  <entry>
    <title>Word 操作指南之表格篇</title>
    <url>/posts/494c263d.html</url>
    <content><![CDATA[<h2 id="中断表格"><a href="#中断表格" class="headerlink" title="中断表格"></a>中断表格</h2><p>将鼠标定位至某行表格结束位置，快捷键 Ctrl+Shift+Enter 中断表格<br><img data-src="https://s2.loli.net/2022/03/07/cwAO6qxuZ3bUn5j.gif" alt="Ctrl_Shift_Enter中断表格"></p>
<h2 id="表格内容无法居中显示"><a href="#表格内容无法居中显示" class="headerlink" title="表格内容无法居中显示"></a>表格内容无法居中显示</h2><p>原因：表格段落样式中，没有清除缩进（将左右缩进设置为 0，特殊格式设置为无）</p>
<h2 id="制作三线表"><a href="#制作三线表" class="headerlink" title="制作三线表"></a>制作三线表</h2><p>文字总结：将表格的所有边框去除；给表格首行添加上边框和下边框，给表格尾行添加下边框；注意三线表格横线的粗细是否要特殊要求（如最上边和最下边的横线要粗一些，第二条横线要细一些）</p>
<p><img data-src="https://s2.loli.net/2022/03/07/QyesALp6R2XWVBN.gif" alt="制作三线表格"></p>
<h2 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h2>]]></content>
  </entry>
  <entry>
    <title>Word 操作指南之符号篇</title>
    <url>/posts/4fcbca1a.html</url>
    <content><![CDATA[<h2 id="乘号"><a href="#乘号" class="headerlink" title="乘号"></a>乘号</h2><p>长按 ALT 键不松，接着按数字键 0215 即可输入乘号<br><img data-src="https://s2.loli.net/2022/03/07/1Kt7DBgP8vriXC9.gif" alt="输入乘号alt0215"></p>
<h2 id="带圈数字"><a href="#带圈数字" class="headerlink" title="带圈数字"></a>带圈数字</h2><p>输入需要带圈的数字，选中这个数字；插入菜单栏⇒编号⇒找到带圈的样式<br><img data-src="https://s2.loli.net/2022/03/07/UaLqfNysHxjkw6R.gif" alt="插入带圈的数字编号"></p>
<h2 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h2>]]></content>
  </entry>
  <entry>
    <title>Word 操作指南之图像篇</title>
    <url>/posts/4a6b571e.html</url>
    <content><![CDATA[<h2 id="文档设置不压缩图片"><a href="#文档设置不压缩图片" class="headerlink" title="文档设置不压缩图片"></a>文档设置不压缩图片</h2><p>文字说明：对于 office 2010，新创建的文档默认设置是会压缩图像的</p>
<p><img data-src="https://s2.loli.net/2022/03/03/jBepqcXOsRuHT1V.gif" alt="文档设置不压缩图片"></p>
<h2 id="刷新题注"><a href="#刷新题注" class="headerlink" title="刷新题注"></a>刷新题注</h2><p>选择图注域代码（或者全选文档），快捷键 F9 刷新</p>
<p><img data-src="https://s2.loli.net/2022/03/03/QDzKE3mXZW76NGL.gif" alt="F9刷新题注"></p>
<h2 id="图片显示问题"><a href="#图片显示问题" class="headerlink" title="图片显示问题"></a>图片显示问题</h2><p>文字说明：如果图片为嵌入型（默认的），在段落中只显示一部分，很有可能是因为段落行间距的问题，此时需要将图片的行间距设置为单倍行距。<br><img data-src="https://s2.loli.net/2022/03/07/PelG5DjYyo6hvCb.gif" alt="插入图片显示不全，对图片进行单倍行距设置"></p>
<p>为什么会这样：整段文字的行间距都是固定的 20 磅，插入图片后，上一行与下一行的行间距仍然只是 20 磅，因此只能看到 20 磅高度的图片</p>
<h2 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h2>]]></content>
  </entry>
  <entry>
    <title>Word 操作指南之配置篇</title>
    <url>/posts/17b2576b.html</url>
    <content><![CDATA[<h2 id="快速访问工具栏"><a href="#快速访问工具栏" class="headerlink" title="快速访问工具栏"></a>快速访问工具栏</h2><p>1、将指定功能按钮添加到快速访问工具栏<br><img data-src="https://s2.loli.net/2022/03/03/kL9TfIx5jEeJnQt.gif" alt="将指定功能按钮添加到快速访问工具栏"></p>
<p>2、长按 Alt 键配合数字键🔢调用快速访问工具栏功能按钮<br><img data-src="https://s2.loli.net/2022/03/03/WbwhFVMLZTBNH3A.gif" alt="长按ALT键+数字按键可以实现快速访问工具栏工具的使用"></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>1、文档设置不压缩图片<br><img data-src="https://s2.loli.net/2022/03/03/jBepqcXOsRuHT1V.gif" alt="文档设置不压缩图片"></p>
<h2 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h2>]]></content>
      <tags>
        <tag>Word</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Homepage 实现只预览摘要而不显示全文功能</title>
    <url>/posts/8af01528.html</url>
    <content><![CDATA[<h2 id="第一步-修改主题配置文件"><a href="#第一步-修改主题配置文件" class="headerlink" title="第一步 修改主题配置文件"></a>第一步 修改主题配置文件</h2><p>比如我使用的是 NexT 主题，则修改 NexT 文件夹下的_config.yml 文件，搜索‘excerpt’，找到‘excerpt_description’，并将值设置成 true，效果如下图所示：<br><img data-src="https://s2.loli.net/2022/05/12/N2YFkGTucMP7UCW.png" alt="excerpt_description属性默认为true"></p>
<p><strong>注意：如果之前并没有对该属性进行更改，NexT 主题默认的值是 true 而无需我们再修改</strong><br>打开这个开关之后，功能是开启了，可是网页它怎么知道我们想要显示的是哪些内容呢？</p>
<h2 id="第二步-设置要显示的内容"><a href="#第二步-设置要显示的内容" class="headerlink" title="第二步 设置要显示的内容"></a>第二步 设置要显示的内容</h2><p>这里有两种方式：</p>
<ol>
<li>显示自定义的内容</li>
<li>显示文档某行之前的内容</li>
</ol>
<h3 id="实现方式之一：显示自定义的内容"><a href="#实现方式之一：显示自定义的内容" class="headerlink" title="实现方式之一：显示自定义的内容"></a>实现方式之一：显示自定义的内容</h3><p>homepage 中显示的内容自定义而不必出现在下方的正文当中</p>
<ul>
<li>在表头「front matter」中添加 description 属性，属性值即为想要显示的自定义内容，比如下方的设置：<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 为什么我要写博客</span><br><span class="line">date: 2021-12-24 17:52:54</span><br><span class="line">tags:</span><br><span class="line">description: 为什么要写博客以及如何去写好博客</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>
完成之后如下方图片所示：<br><img data-src="https://s2.loli.net/2022/05/12/Ov9yJB4LuXdD3MK.png" alt="在主页显示想要显示的内容"></li>
</ul>
<h3 id="实现方法之二：显示文档某行之前的内容"><a href="#实现方法之二：显示文档某行之前的内容" class="headerlink" title="实现方法之二：显示文档某行之前的内容"></a>实现方法之二：显示文档某行之前的内容</h3><ul>
<li>在文档合适的位置插入 “截断” 标签，homepage 当中只显示标签之前的内容，自动隐藏标签之后的内容。“截断” 标签如下所示 <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>sketch 绘图指南</title>
    <url>/posts/82ded38b.html</url>
    <content><![CDATA[<p>初衷： <a href="https://draveness.me/sketch-and-sketch/">技术文章配图指南</a><br>参考视频： <a href="https://www.youtube.com/watch?v=6KpYC6ckShw&amp;list=PLwO1Ou6RaKN7ZE3r_TbyAw4rCZq7QODyb">sketch 教程壹天上手</a><br>参考视频教程： <a href="https://www.sketch.net.cn/lengmenjiqiao.html">冷门但好用的 SKETCH 高频技巧</a><br>参考视频： <a href="https://www.bilibili.com/video/BV1f7411w7H9?p=1">Sketch Symbols 控件功能 - 善用组件 早点下班 - 新像素 UI 设计培训</a></p>
<span id="more"></span>

<h3 id="为什么是-sketch"><a href="#为什么是-sketch" class="headerlink" title="为什么是 sketch"></a>为什么是 sketch</h3><ol>
<li> 上手快，操作简单（让我想起了 sketchup 草图大师）</li>
<li> 矢量图软件，可轻松到处不同倍率的图片</li>
<li> 比 Adobe illustrator 体积更小，使用更流畅</li>
<li> 软件稳定，没有碰到软件崩溃的情况，且没有保存按钮（软件会给我们自动保存）</li>
<li> 有大量的第三方插件</li>
</ol>
<h3 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h3><ol>
<li> 切片：S；切片时双击编组，可以快速选中编组进行导出</li>
<li> 旋转：command+shift+R，按住 shift 键也可以整数旋转；按住 command 键拖动角点也可以实现旋转</li>
<li> 选中形状吸取颜色：control+C</li>
<li> 锁定：command+shift+L</li>
<li> 隐藏：command+shift+H</li>
<li> 导入图片：command+shift+K</li>
<li> 快速复制：按住 option 拖动，command+D 可重复上一步移动复制变换</li>
<li> 上移一层：<code>command+]</code></li>
<li> 下移一层：<code>command+[</code></li>
<li>切换图层：Tab</li>
<li> 连续缩放视图：command + 滚轮键</li>
<li>微调形状尺寸：选中形状之后，按住 command + 上下左右箭头移动 1px；可以加上 shift 移动 10px</li>
<li> 复制样式：command+option+C</li>
<li> 粘贴样式：command+option+V</li>
<li> 注意：文字效果复制到形状是无效的，形状效果复制到文本是可以的。</li>
<li>调节图片透明度：选中图层，直接按数字键可以调整（比如按 10，设置透明度为 10%）</li>
<li>显示 / 隐藏除绘图区域的所有界面：<code>command+.</code></li>
<li>穿透选择：按住 Command ，鼠标点击该元素，可以穿透编组进行选择</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/31/drqAFMWZwiNueg1.png" alt="sketch常用快捷键.png"></p>
<h4 id="钢笔工具"><a href="#钢笔工具" class="headerlink" title="钢笔工具"></a>钢笔工具</h4><p>钢笔工具可能是绘图中最常用和最实用的工具了<br>钢笔工具：V<br>闭合路径：钢笔右侧窗口的功能按钮<br>结束编辑：Enter</p>
<p>四种绘制模式，快捷键分别为数字键 1，2，3，4</p>
<ul>
<li>直线角模式：没有调节把手，</li>
<li>镜像（对称模式）：两边的把手的变化是一样的</li>
<li>断开：左右把手不相关联</li>
<li>不对称模式：两个锚点到主点之间的距离是独立的，但依然会有联系</li>
</ul>
<p>移动节点：选中多个节点后（shift 可以加选），拖动节点可以移动节点<br>删除节点：选择节点，delete/backspace 即可<br>选择节点：可以通过节点框选工具，或者直接 shift 加选</p>
<h4 id="快速复制（阵列）元素"><a href="#快速复制（阵列）元素" class="headerlink" title="快速复制（阵列）元素"></a>快速复制（阵列）元素</h4><p>按住 Alt 键拖拽复制一个相同元素，你可以继续按住 Command + D 复制更多的相同元素。</p>
<h4 id="元素像素尺寸变成整数"><a href="#元素像素尺寸变成整数" class="headerlink" title="元素像素尺寸变成整数"></a>元素像素尺寸变成整数</h4><p>不光适用于单个元素，当我们对一组元素进行缩放后，组内元素间距、大小、字号都不再是像素的整数倍时，只要选中组，点一下 Round To Pixel（<strong>对齐到像素</strong>）即可使所有元素尺寸、间距都恢复为像素的整数倍。在对齐形状时特别有用</p>
<h4 id="圆角半径"><a href="#圆角半径" class="headerlink" title="圆角半径"></a>圆角半径</h4><p>方法 1：点击形状进入选中模式，快速双击进入路径模式，可以选择需要圆角的角点进行圆角设置<br>方法 2：点击形状进入选中模式，在圆角半径框中输入 <code>5;5;0;0</code> 即可给不同点设置不同圆角数值</p>
<p><img data-src="https://s2.loli.net/2022/05/10/rMn4YfRvXzLlN7H.png" alt="（sketch）设置圆角半径.png"></p>
<h3 id="高级应用"><a href="#高级应用" class="headerlink" title="高级应用"></a>高级应用</h3><h4 id="自适应布局"><a href="#自适应布局" class="headerlink" title="自适应布局"></a>自适应布局</h4><p>参考视频教程： <a href="https://www.sketch.net.cn/lengmenjiqiao.html">冷门但好用的 SKETCH 高频技巧</a></p>
<p>比方说可以实现的功能：保持元素间隔不变；拖拽后保持位置和大小；保持元素间隔不变<br>方法 1：通过创建控件时调整<br>方法 2：直接调整相对位置和固定大小，调整完之后可以在创建控件。一个是相对位置，一个是上下左右方向是否固定大小（对组合控件都是有效果的）</p>
<h4 id="控件的使用"><a href="#控件的使用" class="headerlink" title="控件的使用"></a>控件的使用</h4><p>参考视频： <a href="https://www.bilibili.com/video/BV1f7411w7H9?p=1">Sketch Symbols 控件功能 - 善用组件 早点下班 - 新像素 UI 设计培训</a></p>
<p>组件化：UI 设计稿标准化<br>重点：如何给组件命名，斜杠的用处；斜杠就相当于多了一个层级，加上斜杠之后，（比如 card/default 和 card/clone）default 和 clone 属于一个层级，都在 card 之下。且斜杠的使用可以无限嵌套<br>如果组件套组件，如何将被套的组件做出控件<br>可以先将组件中需要做成组件的复制出来，然后创建组件，将原先的删除，将新创建的组件放进去<br>比如 button/wechat 和 button/alipay<br>控件（相当于 sketchup 中的组件）的用处</p>
<ul>
<li>在控件编辑区，直接在控件中添加文本，图形等都会直接影响到绘图区的所有控件</li>
<li>命名逻辑：控件中可以手动更改的地方，在命名的时候可以加上一个符号等，后期复用控件的时候，一目了然知道这个控件哪些地方可以自定义修改</li>
<li>比如想要更改组件的主体颜色，可以将背景设置成控件，然后将这个控件的名字命名好</li>
</ul>
<p><img data-src="https://s2.loli.net/2022/05/10/SOnJvbdwiV7hoQm.png" alt="（sketch）控件的层级关系.png"></p>
<h4 id="复用样式-amp-复用符号"><a href="#复用样式-amp-复用符号" class="headerlink" title="复用样式&amp;复用符号"></a>复用样式 &amp; 复用符号</h4><h5 id="复用样式"><a href="#复用样式" class="headerlink" title="复用样式"></a>复用样式</h5><p>也就相当于 word 中创建一个标题样式；与之相似，修改了应用了这个样式的属性，刷新一遍，所有应用了这个样式的元素都会跟着变化（就相当于 word 中将选中文字的样式赋予到标题样式中去了）</p>
<p><img data-src="https://s2.loli.net/2022/05/10/q9ison2gMFDrb3R.png" alt="（sketch）复用样式.png"></p>
<h5 id="复用符号"><a href="#复用符号" class="headerlink" title="复用符号"></a>复用符号</h5><p>双击复用符号，会跳转到复用符号的编辑界面，编辑完之后，可以返回<strong>实例（通过类创建的实例）</strong><br>复制多个控件，当我们编辑其中一个控件时，其他的都会跟着变化；但是当我们修改了控件中的文字，不会都跟着变哦！！！【相当于整个框架没有变】<br>比如一个圆形里面填充了一张图片，将这个圆形创建控件之后，复制一个出来，此时就可以自己更改这个圆形里面的图片了，而不会影响到其他复制的控件<br>控件的意思是不是：创建了一个框架，使得框架中的内容变得可” 控”</p>
<h3 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h3>]]></content>
  </entry>
  <entry>
    <title>为什么放弃使用 remnote</title>
    <url>/posts/b0b73b25.html</url>
    <content><![CDATA[<ol>
<li> 在线库依赖网络，网络不好的情况基本上用不了</li>
<li> 笔记格式不通用，复制笔记到其他软件调格式麻烦</li>
<li> 笔记一多，文档内容一多就明显感到不流畅了</li>
<li> 搜索，中文搜索太拉胯了，通常是搜索框中输入了四个中文，结果匹配结果里面匹配到 1 个字，2 个字的也被搜出来了</li>
<li> 对图片的支持不友好，且本身服务器加载图片很慢</li>
<li> 在 Mac 端，中文输入法的情况下，敲了一串英文，enter 回车会出现问题</li>
<li> 插件系统基本上等于没有，社区也还没有什么插件</li>
<li> 同步机制做的还不行，remnote 客户端和 PWA 应用两者不同步，有点像两个账户了；遇到客户端更新同步就更慢了</li>
<li> remnote 不支持表格，或者通过 HTML 实现该功能过于难用</li>
<li> PDF 功能也不好用，一个是较大一点的 PDF 都不敢放 remnote 当中，加载慢；第二个是自带的 pin 和链接功能，选择 PDF 文字的时候，没有格式处理，导致选择的文字字与字之间存在多余的空格</li>
<li>复习机制比较拉胯，卡片操作还是远远不如 anki</li>
<li> 删除文档之后，笔记库中出现一大堆的 untitled，这些文档有些甚至都删不去</li>
<li>待续…</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/04/03/nVrOaYMsvLcQgCP.jpg" alt="系统超级大BUG之无法彻底删除文件"></p>
]]></content>
  </entry>
  <entry>
    <title>图片压缩指南</title>
    <url>/posts/5566e923.html</url>
    <content><![CDATA[<h3 id="1、Imagine-本地图片压缩"><a href="#1、Imagine-本地图片压缩" class="headerlink" title="1、Imagine 本地图片压缩"></a>1、Imagine 本地图片压缩</h3><p>Github 项目名称：Imagine； <a href="https://github.com/meowtec/Imagine">GitHub 仓库</a></p>
<blockquote>
<p>Imagine is a desktop app for compression of PNG and JPEG, with a modern and friendly UI.</p>
</blockquote>
<p>优点：UI 界面，参数可视化可调；开源免费；支持中文；支持转为 webp 格式图片；本地<br>缺点：无法处理 gif 图片</p>
<span id="more"></span>
<p><img data-src="https://s2.loli.net/2022/03/31/funvePYGOx9qXBy.png" alt="ImagineUI界面"></p>
<h3 id="2、Compressio-app"><a href="#2、Compressio-app" class="headerlink" title="2、Compressio.app"></a>2、Compressio.app</h3><p>在线 GIF 压缩 [Compressio.app]： <a href="https://compressio.app/">开源网址</a><br>github 仓库： <a href="https://github.com/twoabd/CompressioWeb">网址</a></p>
<p>优点：开源免费；跨设备运行；免安装；可自行搭建服务器<br>缺点：可能会涉及到隐私问题<br><img data-src="https://s2.loli.net/2022/03/31/71XCLTIxyQPoZnN.png" alt="Compressio.app界面"></p>
<h3 id="3、本地图片压缩-Compress-images"><a href="#3、本地图片压缩-Compress-images" class="headerlink" title="3、本地图片压缩 Compress-images"></a>3、本地图片压缩 Compress-images</h3><p>GitHub 仓库： <a href="https://github.com/Yuriy-Svetlov/compress-images">Compress-images</a></p>
<p>命令行安装以下依赖：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">npm install compress-images --save</span><br><span class="line"></span><br><span class="line">npm install pngquant-bin@6.0.1 --save</span><br><span class="line">npm install gifsicle@5.2.1 --save</span><br><span class="line"></span><br><span class="line">注意不要升级随便升级版本，比如下面这段代码，升级之后报错（不知道为什么，可能识别不了）</span><br><span class="line">npm install gifsicle --save</span><br></pre></td></tr></tbody></table></figure>

<h4 id="1、使用方法："><a href="#1、使用方法：" class="headerlink" title="1、使用方法："></a>1、使用方法：</h4><p>请查阅下载的文档中的 example 示例的 Manual.txt</p>
<ol>
<li><p> 从 GitHub 仓库下载项目：</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:semiromid/compress-images.git   </span><br></pre></td></tr></tbody></table></figure></li>
<li><p> 删除所有文件夹，除了 example 文件夹</p>
</li>
<li><p> 在 example 文件夹打开命令行工具（vscode 打开），如下命令安装依赖</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm install compress-images --save</span><br></pre></td></tr></tbody></table></figure></li>
<li><p> 如遇到一下情况的报错，可能是不适合运行在某些系统上，可能需要对 example 文件中的 compress_images.js 做修改。<br>PS: win7 测试，在压缩 png 图片时，需要将 pngquant 参数改为 pngcrush</p>
</li>
</ol>
<p><img data-src="https://s2.loli.net/2022/03/31/FUIVzy28SxogD7j.png" alt="pngquant2pngcrush"></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">[1] <span class="string">"npm install pngquant-bin@6.0.1 --save"</span> (It does not work properly on some OS). If you get error, you need edit <span class="string">'./compress_images.js'</span> and replace <span class="string">'pngquant'</span> on other PNG engine, as example on <span class="string">"pngcrush"</span>.</span><br><span class="line">{png: {engine: <span class="string">'pngcrush'</span>, <span class="built_in">command</span>: <span class="literal">false</span>}},</span><br><span class="line"></span><br><span class="line">[2] <span class="string">"npm install gifsicle@5.2.1 --save"</span> (It does not work properly on some OS). If you get error, you need edit <span class="string">'./compress_images.js'</span> and replace <span class="string">'gifsicle'</span> on other GIF engine, as example <span class="string">"gif2webp"</span></span><br><span class="line">{gif: {engine: <span class="string">'gif2webp'</span>, <span class="built_in">command</span>: <span class="literal">false</span>}}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<ol>
<li> 运行 minify_Img.bat，如果报错缺少什么依赖，继续在命令行中安装</li>
</ol>
<h4 id="2、可能会遇到的问题："><a href="#2、可能会遇到的问题：" class="headerlink" title="2、可能会遇到的问题："></a>2、可能会遇到的问题：</h4><ol>
<li> 如果图片名太长，可能不能压缩处理，可先重命名在压缩</li>
<li> 安装依赖可能会出现网络问题</li>
<li> 最常见的错误就是上方第四点 pngquant|pngcrush；gifsicle|gif2webp 可能需要切换</li>
</ol>
<h4 id="3、自定义配置："><a href="#3、自定义配置：" class="headerlink" title="3、自定义配置："></a>3、自定义配置：</h4><ol>
<li> 下载的示例库已经创建好了输入文件夹和输出文件夹，层级关系已经设置好了。其实我们也可以自定义设置 input 和 output 文件夹</li>
</ol>
<p><img data-src="/_posts/%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E6%8C%87%E5%8D%97/Image-Compress_Compressio.app%E7%95%8C%E9%9D%A2.png" alt="compress_images.js自定义设置界面"></p>
<ol start="2">
<li> 自定义配置参考文档：GitHub 仓库给了 7 中实例， <a href="https://github.com/Yuriy-Svetlov/compress-images">点击查看</a><br>举例其中的集中方式：<br>[1] 系数默认配置 </li>
</ol>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> compress_images = <span class="built_in">require</span>(<span class="string">"compress-images"</span>),</span><br><span class="line">  INPUT_path_to_your_images,</span><br><span class="line">  OUTPUT_path;</span><br><span class="line"></span><br><span class="line">INPUT_path_to_your_images = <span class="string">"src/img/**/*.{jpg,JPG,jpeg,JPEG,png,svg,gif}"</span>;</span><br><span class="line">OUTPUT_path = <span class="string">"build/img/"</span>;</span><br><span class="line"></span><br><span class="line">compress_images(INPUT_path_to_your_images, OUTPUT_path, { <span class="attr">compress_force</span>: <span class="literal">false</span>, <span class="attr">statistic</span>: <span class="literal">true</span>, <span class="attr">autoupdate</span>: <span class="literal">true</span> }, <span class="literal">false</span>,</span><br><span class="line">                { <span class="attr">jpg</span>: { <span class="attr">engine</span>: <span class="string">"mozjpeg"</span>, <span class="attr">command</span>: [<span class="string">"-quality"</span>, <span class="string">"60"</span>] } },</span><br><span class="line">                { <span class="attr">png</span>: { <span class="attr">engine</span>: <span class="string">"pngquant"</span>, <span class="attr">command</span>: [<span class="string">"--quality=20-50"</span>, <span class="string">"-o"</span>] } },</span><br><span class="line">                { <span class="attr">svg</span>: { <span class="attr">engine</span>: <span class="string">"svgo"</span>, <span class="attr">command</span>: <span class="string">"--multipass"</span> } },</span><br><span class="line">                { <span class="attr">gif</span>: { <span class="attr">engine</span>: <span class="string">"gifsicle"</span>, <span class="attr">command</span>: [<span class="string">"--colors"</span>, <span class="string">"64"</span>, <span class="string">"--use-col=web"</span>] } },</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">error, completed, statistic</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"-------------"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">    <span class="built_in">console</span>.log(completed);</span><br><span class="line">    <span class="built_in">console</span>.log(statistic);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"-------------"</span>);</span><br><span class="line">  }</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>

<p>[2]jpg⇒webp</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> compress_images = <span class="built_in">require</span>(<span class="string">'compress-images'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// We will be compressing images [jpg] with two algorithms, [webp] and [jpg];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//[jpg] ---to---&gt; [webp]</span></span><br><span class="line">compress_images(</span><br><span class="line">  <span class="string">"src/img/**/*.{jpg,JPG,jpeg,JPEG}"</span>,</span><br><span class="line">  <span class="string">"build/img/"</span>,</span><br><span class="line">  { <span class="attr">compress_force</span>: <span class="literal">false</span>, <span class="attr">statistic</span>: <span class="literal">true</span>, <span class="attr">autoupdate</span>: <span class="literal">true</span> },</span><br><span class="line">  <span class="literal">false</span>,</span><br><span class="line">  { <span class="attr">jpg</span>: { <span class="attr">engine</span>: <span class="string">"webp"</span>, <span class="attr">command</span>: <span class="literal">false</span> } },</span><br><span class="line">  { <span class="attr">png</span>: { <span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span> } },</span><br><span class="line">  { <span class="attr">svg</span>: { <span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span> } },</span><br><span class="line">  { <span class="attr">gif</span>: { <span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span> } },</span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>{</span><br><span class="line">    <span class="keyword">if</span> (err === <span class="literal">null</span>) {</span><br><span class="line">      <span class="comment">//[jpg] ---to---&gt; [jpg(jpegtran)] WARNING!!! autoupdate  - recommended to turn this off, it's not needed here - autoupdate: false</span></span><br><span class="line">      compress_images(</span><br><span class="line">        <span class="string">"src/img/**/*.{jpg,JPG,jpeg,JPEG}"</span>,</span><br><span class="line">        <span class="string">"build/img/"</span>,</span><br><span class="line">        { <span class="attr">compress_force</span>: <span class="literal">false</span>, <span class="attr">statistic</span>: <span class="literal">true</span>, <span class="attr">autoupdate</span>: <span class="literal">false</span> },</span><br><span class="line">        <span class="literal">false</span>,</span><br><span class="line">        { <span class="attr">jpg</span>: { <span class="attr">engine</span>: <span class="string">"jpegtran"</span>, <span class="attr">command</span>: <span class="literal">false</span> } },</span><br><span class="line">        { <span class="attr">png</span>: { <span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span> } },</span><br><span class="line">        { <span class="attr">svg</span>: { <span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span> } },</span><br><span class="line">        { <span class="attr">gif</span>: { <span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span> } },</span><br><span class="line">        <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{}</span><br><span class="line">      );</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">);</span><br></pre></td></tr></tbody></table></figure>

<p>[3] jpg (webp)+gif (gifsicle)+png (webp)+svg (svgo)，括号中的为压缩算法 / 格式转换</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> compress_images = <span class="built_in">require</span>(<span class="string">'compress-images'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//[jpg+gif+png+svg] ---to---&gt; [jpg(webp)+gif(gifsicle)+png(webp)+svg(svgo)]</span></span><br><span class="line">compress_images(<span class="string">'src/img/source/**/*.{jpg,JPG,jpeg,JPEG,gif,png,svg}'</span>, <span class="string">'build/img/'</span>, {<span class="attr">compress_force</span>: <span class="literal">false</span>, <span class="attr">statistic</span>: <span class="literal">true</span>, <span class="attr">autoupdate</span>: <span class="literal">true</span>}, <span class="literal">false</span>,</span><br><span class="line">                                            {<span class="attr">jpg</span>: {<span class="attr">engine</span>: <span class="string">'webp'</span>, <span class="attr">command</span>: <span class="literal">false</span>}},</span><br><span class="line">                                            {<span class="attr">png</span>: {<span class="attr">engine</span>: <span class="string">'webp'</span>, <span class="attr">command</span>: <span class="literal">false</span>}},</span><br><span class="line">                                            {<span class="attr">svg</span>: {<span class="attr">engine</span>: <span class="string">'svgo'</span>, <span class="attr">command</span>: <span class="literal">false</span>}},</span><br><span class="line">                                            {<span class="attr">gif</span>: {<span class="attr">engine</span>: <span class="string">'gifsicle'</span>, <span class="attr">command</span>: [<span class="string">'--colors'</span>, <span class="string">'64'</span>, <span class="string">'--use-col=web'</span>]}}, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">      <span class="comment">//-------------------------------------------------                                    </span></span><br><span class="line">      <span class="comment">//[jpg] ---to---&gt; [jpg(jpegtran)] WARNING!!! autoupdate  - recommended to turn this off, it's not needed here - autoupdate: false</span></span><br><span class="line">      compress_images(<span class="string">'src/img/source/**/*.{jpg,JPG,jpeg,JPEG}'</span>, <span class="string">'src/img/combine/'</span>, {<span class="attr">compress_force</span>: <span class="literal">false</span>, <span class="attr">statistic</span>: <span class="literal">true</span>, <span class="attr">autoupdate</span>: <span class="literal">false</span>}, <span class="literal">false</span>,</span><br><span class="line">                                                      {<span class="attr">jpg</span>: {<span class="attr">engine</span>: <span class="string">'jpegtran'</span>, <span class="attr">command</span>: [<span class="string">'-trim'</span>, <span class="string">'-progressive'</span>, <span class="string">'-copy'</span>, <span class="string">'none'</span>, <span class="string">'-optimize'</span>]}},</span><br><span class="line">                                                      {<span class="attr">png</span>: {<span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span>}},</span><br><span class="line">                                                      {<span class="attr">svg</span>: {<span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span>}},</span><br><span class="line">                                                      {<span class="attr">gif</span>: {<span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span>}}, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">            <span class="comment">//[jpg(jpegtran)] ---to---&gt; [jpg(mozjpeg)] WARNING!!! autoupdate  - recommended to turn this off, it's not needed here - autoupdate: false</span></span><br><span class="line">            compress_images(<span class="string">'src/img/combine/**/*.{jpg,JPG,jpeg,JPEG}'</span>, <span class="string">'build/img/'</span>, {<span class="attr">compress_force</span>: <span class="literal">false</span>, <span class="attr">statistic</span>: <span class="literal">true</span>, <span class="attr">autoupdate</span>: <span class="literal">false</span>}, <span class="literal">false</span>,</span><br><span class="line">                                                            {<span class="attr">jpg</span>: {<span class="attr">engine</span>: <span class="string">'mozjpeg'</span>, <span class="attr">command</span>: [<span class="string">'-quality'</span>, <span class="string">'75'</span>]}},</span><br><span class="line">                                                            {<span class="attr">png</span>: {<span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span>}},</span><br><span class="line">                                                            {<span class="attr">svg</span>: {<span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span>}},</span><br><span class="line">                                                            {<span class="attr">gif</span>: {<span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span>}}, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">                  <span class="comment">//[png] ---to---&gt; [png(pngquant)] WARNING!!! autoupdate  - recommended to turn this off, it's not needed here - autoupdate: false</span></span><br><span class="line">                  compress_images(<span class="string">'src/img/source/**/*.png'</span>, <span class="string">'build/img/'</span>, {<span class="attr">compress_force</span>: <span class="literal">false</span>, <span class="attr">statistic</span>: <span class="literal">true</span>, <span class="attr">autoupdate</span>: <span class="literal">false</span>}, <span class="literal">false</span>,</span><br><span class="line">                                                                  {<span class="attr">jpg</span>: {<span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span>}},</span><br><span class="line">                                                                  {<span class="attr">png</span>: {<span class="attr">engine</span>: <span class="string">'pngquant'</span>, <span class="attr">command</span>: [<span class="string">'--quality=30-60'</span>, <span class="string">'-o'</span>]}},</span><br><span class="line">                                                                  {<span class="attr">svg</span>: {<span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span>}},</span><br><span class="line">                                                                  {<span class="attr">gif</span>: {<span class="attr">engine</span>: <span class="literal">false</span>, <span class="attr">command</span>: <span class="literal">false</span>}}, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{                                                      </span><br><span class="line">                  }); </span><br><span class="line">            });                                      </span><br><span class="line">      });</span><br><span class="line">      <span class="comment">//-------------------------------------------------</span></span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure>

<h4 id="4、压缩效果"><a href="#4、压缩效果" class="headerlink" title="4、压缩效果"></a>4、压缩效果</h4><p><img data-src="https://s2.loli.net/2022/05/12/b8skpTMEZxOQRA7.gif" alt="图片压缩效果：文件从11M->2.2M"></p>
]]></content>
  </entry>
  <entry>
    <title>新建文档指南</title>
    <url>/posts/295a526.html</url>
    <content><![CDATA[<ol>
<li>首先创建一个专门的文件夹</li>
<li>创建 imgs，PDFs 等子文件夹用于存储资源文件</li>
<li>注意所截取的图片一定要保存下来，在到 word 中插入图片【过程虽然比直接复制截图繁琐，但是这个图片以后如果用得到呢？难道还要在打开 PDF 进行截图吗】</li>
<li>截图的图片命名好名字，不要按照默认的时间命名</li>
<li>给图片添加题注，顺手的事情，因为图片的名字可以作为图片的图注</li>
<li>将图片和图注复制到其他文档中后，选择图注的域代码，按下 F9 即可更新图注，所以说前面给图片添加题注是一个好习惯，后期省的给图片添加图注</li>
<li>保存一份带有标题样式的 Word 模板</li>
<li>保存好使用到的 pdf 文件和图片，方便后期直接压缩包打包<br>最后，一定要注意，文章中插入的信息要标注来源！！！</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>为什么我要写博客</title>
    <url>/posts/b76b2678.html</url>
    <content><![CDATA[<p>在回答这个问题之前，先思考一下为什么我之前没有写博客：</p>
<h2 id="为什么我之前没有写博客"><a href="#为什么我之前没有写博客" class="headerlink" title="为什么我之前没有写博客"></a>为什么我之前没有写博客</h2><ol>
<li>之前没有相关知识，没办法搭建属于自己的博客</li>
<li>感觉对于某个问题或知识点，自己已经明白它了，还多花时间精力去写它有什么用</li>
<li>写出来怕被人喷或被人笑话</li>
<li>写博客并非几天几夜就能够写出来的，而是在于博客长久的更新与维护，怕自己没有这个毅力坚持</li>
<li>自己想表达的意思在写的过程中发现难以表达出来</li>
</ol>
<h3 id="对于以上几点自己的理解"><a href="#对于以上几点自己的理解" class="headerlink" title="对于以上几点自己的理解"></a>对于以上几点自己的理解</h3><ol>
<li>自己查阅了一些网站，视频，书籍资料，学习了 Git 相关的知识，搭建了属于自己的博客。</li>
<li>写博客当然有用，不然那么多牛人为什么写博客。对于我来说，<strong>第一个</strong>是可以记录自己的学习过程，以后也可以清晰的看到哪个阶段自己关注和干了哪些事情。<strong>第二个</strong>是自己目前理解的一些东西以后仍然可能会忘掉，通过搜索自己的博客来温习知识点，沿着当初写博客的 “思考路径”，比起读其他人写的博客来得更轻松些，毕竟是自己习惯的思维方式。<strong>第三个</strong>是写博客自身也是在加深我们对知识点的理解，推荐查看这篇博文：<a href="http://mindhacks.cn/2009/02/09/writing-is-better-thinking/">书写是为了更好的思考</a>。</li>
<li>笑就笑呗，哪个人不都是从小白阶段过来的。再说，哪有一篇文章能够获得所有人的赞同呢，喷子是少不了的，放开心态写吧。</li>
<li>耗时间这是必然的，但想到往后可以回首查看自己走过的路，可以帮助到访问自己博客的网友，心里还是会有莫名的满足感吧！</li>
<li>表达不出自己想表达的意思，那么正好可以借助着写博客的机会练习嘛。有些东西确实用文字表达不清楚，那也可以使用图，动画或其他方式来呈现，而这就进一步考察我们对知识的理解和技术能力了。</li>
</ol>
<p>非常认同 <a href="https://www.cnblogs.com/vamei/">Vamei</a> 博主的这段话：</p>
<blockquote>
<p>从小学到大学，我的学习方式都是” 听课 + 做笔记 + 读书”，这个过程类似于 web1.0：我是一个客户端，老师或者书籍是服务器，我们从服务器上获取各种信息，而基本上从来不产出什么，这整个学习过程如蜗牛一样慢。至于学习的情况如何，则要等到期末考试，才能根据答题情况粗糙的认识到自己对知识的掌握程度。而此时考试已经结束，再懒得去翻看半年前开始学习的内容了，所以知识体系上的瑕疵也就永远的留在那里。</p>
</blockquote>
<p>写博客可以对自己学习情况迅速给出反馈，通过博客这种产出方式，可以快速清楚自己对于某个知识点是否真正理解。如果碰到自己不清楚的地方，自己也不能偷懒，必须得去查阅资料，否则就没发完成这篇文章。而这个时候有目的的去查阅资料，效率自然较高。</p>
<h2 id="写博客的好处"><a href="#写博客的好处" class="headerlink" title="写博客的好处"></a>写博客的好处</h2><ul>
<li>可以结交更多的朋友，和同档次或高于你档次的人做朋友，你可以学到很多。</li>
<li>通过博客的评论系统或是通过其他方式联系你，热心的道友可以帮助你指正你博客当中自己难以发现的问题。</li>
<li>如果能有幸帮助到网友，得到网友的感谢或肯定，心里也一定是美滋滋的吧。</li>
<li>对于我自己来说，每次写博客的时候，一定不会把自己都想不明白的东西随意往博客上放，每一句话都必须要自己想清楚才可以，每一个知识点必须自己弄懂才会写上去。从这个角度来说，写博客对于提升自己的严谨度和专业性是非常有帮助的，久而久之，对于技术的态度也会潜移默化的变成生活的态度。</li>
<li>还有一点，我觉得博客是一个非常棒的个人简历，别人不仅一眼就能看出你的技术水平，还可以了解你的关注的领域，通过言辞以及评论，从而看出你的为人和人品。</li>
</ul>
<h2 id="如何去写好博客"><a href="#如何去写好博客" class="headerlink" title="如何去写好博客"></a>如何去写好博客</h2><p>我们需要有假想观众，写出来的东西是一种媒介，是写给人看的，起码自己会去读吧。所以，要带着让别人读懂的目标去写，然后就是琢磨怎样写能让别人更容易读懂。<br>假设自己是某个领域的小白，去网上搜索这个领域的相关资料，搜到了一些技术博客，而某些博客的文章，没有前因，没有后果，对于小白来说是可以想象是一种怎么样的体验呢。“这写的啥东西呀，看起来和自己想要的内容相关，又好像不相关，然后随便划拉几下，关掉了博客”。别说小白，可能过段时间连自己都不知道为什么要写这个东西了。因此，在写博客的过程中，想象我们的读者是个初学者，不要一开始在认为自己懂了的前提下直接下结论。最好可以说说自己在处理过程中碰到的问题，写下这篇博客缘由以及一些注意事项，这样也方便自己以后在看自己的博客时也能马上进入状态理解以前想要表达的意思。</p>
<p>再有，多看看多学学其他道友们是如何写作以及表达的吧。</p>
<p>最后，分享《论语》当中的一段话：司马牛忧曰：“人皆有兄弟，我独亡。” 子夏曰：“商闻之矣：死生有命，富贵在天。君子敬而无失，与人恭而有礼，四海之内皆兄弟也。君子何患乎无兄弟也？”</p>
]]></content>
  </entry>
  <entry>
    <title>此处心安是吾乡</title>
    <url>/posts/d784b47d.html</url>
    <content><![CDATA[<h3 id="夏"><a href="#夏" class="headerlink" title="夏"></a>夏</h3><p><img data-src="https://s2.loli.net/2022/03/31/LMDRruNVvoq6S82.jpg" alt="此处心安是吾乡_夏.jpg"></p>
<h3 id="冬"><a href="#冬" class="headerlink" title="冬"></a>冬</h3><p><img data-src="https://s2.loli.net/2022/03/31/J7AxQVlhnzPbwdo.jpg" alt="此处心安是吾乡_冬.jpeg"></p>
<p><img data-src="https://s2.loli.net/2022/03/31/myAvrP5V1IJxZ6l.jpg" alt="此处心安是吾乡_冬-傍晚.jpeg"></p>
]]></content>
      <tags>
        <tag>hexo配置</tag>
      </tags>
  </entry>
  <entry>
    <title>研一期末考试</title>
    <url>/posts/82be73a2.html</url>
    <content><![CDATA[<p>不知道大家对复习周感觉如何？个人认为期末考试那段时间是非常轻松愉悦的。那一两个星期里，可以完全放下科研（而且有正当理由拒绝其他令人烦恼的事情😄），然后一边干着自己这后半学期非常想干的东西，一边准备期末复习。</p>
<p>学习过程可以是和实验室的同学交流讨论，也可以和室友们彻夜漫谈，亦或刷着慕课上的视频，借阅师兄师姐往年的试题笔记；</p>
<p>遇到一个人解决不过来的问题，我们可以想办法分工合作，分工精确到试题当中哪位同学具体做哪些题，并将这些题给其他人讲清楚，最后相互讨论，相互补充，将一套题弄懂为止。备考的这段时间里，尽管有些对未来考题未知的恐惧，但更多的是那种满足感，那种将题目给旁边同学讲明白的自豪感，这种感觉尤其体现在自己对这道题的理解或心得传授给其他同学的过程。通过讨论、做题与讲授，这不比听老师讲课来的更快些嘛，嘿嘿😋！</p>
<p><img data-src="https://s2.loli.net/2022/05/12/3ZwDJ7YOdUVEsb2.jpg" alt="学习金字塔"></p>
<p>当然，除了单打独斗，我们其中也总会有消息情报员，负责统计历年考题，从师兄师姐那里打听资料；资料整理员，负责整理这门课程的考试重点；小抄出版员，负责制作简短精良的小纸条；每个人可能承担着多种不同的角色，目标非常明确：通过考试。</p>
<p>再回到考试周这个问题上：试题也都有标准答案，大家也都做着相同的一套题，奔着一个共同的目标，过或不能过，其实自己心里非常清楚。这种 “可以预见” 的结果，与生活中其他事情相比，怎么会不觉得轻松呢？</p>
]]></content>
  </entry>
  <entry>
    <title>Awesome-list</title>
    <url>/posts/1ea487ce.html</url>
    <content><![CDATA[<p>GitHub 上的高质量 Awesome List 存档</p>
<h2 id="Awesome-List-来源"><a href="#Awesome-List-来源" class="headerlink" title="Awesome List 来源"></a>Awesome List 来源</h2><blockquote>
<p>An awesome list is a list of awesome things curated by the community. There are awesome lists about everything from CLI applications to fantasy books. The main repository serves as a curated list of awesome lists.</p>
</blockquote>
<p>搜索 <code>awesome</code>+ <code>关键词</code> 即可，关于全部 awesome list 的汇总可见 <a href="https://github.com/sindresorhus/awesome">sindresorhus/awesome</a> 。</p>
<h2 id="GitHub-项目美化"><a href="#GitHub-项目美化" class="headerlink" title="GitHub 项目美化"></a>GitHub 项目美化</h2><ol>
<li> <a href="https://github.com/durgeshsamariya/awesome-github-profile-readme-templates">durgeshsamariya/awesome-github-profile-readme-templates</a></li>
<li> <a href="https://github.com/a-maliarov/awesome-shields">a-maliarov/awesome-shields</a></li>
</ol>
<h2 id="科学计算与数值分析"><a href="#科学计算与数值分析" class="headerlink" title="科学计算与数值分析"></a>科学计算与数值分析</h2><ol>
<li> <a href="https://github.com/nschloe/awesome-scientific-computing">nschloe/awesome-scientific-computing</a></li>
</ol>
<h2 id="数据标注"><a href="#数据标注" class="headerlink" title="数据标注"></a>数据标注</h2><ol>
<li> <a href="https://github.com/heartexlabs/awesome-data-labeling">heartexlabs/awesome-data-labeling</a></li>
</ol>
<h2 id="工作效率"><a href="#工作效率" class="headerlink" title="工作效率"></a>工作效率</h2><ol>
<li> <a href="https://github.com/kmaasrud/awesome-obsidian">kmaasrud/awesome-obsidian</a></li>
<li> <a href="https://github.com/jyguyomarch/awesome-productivity">jyguyomarch/awesome-productivity</a></li>
<li> <a href="https://github.com/eastlakeside/awesome-productivity-cn">eastlakeside/awesome-productivity-cn</a></li>
</ol>
<h2 id="Zsh-插件"><a href="#Zsh-插件" class="headerlink" title="Zsh 插件"></a>Zsh 插件</h2><ol>
<li> <a href="https://github.com/unixorn/awesome-zsh-plugins">unixorn/awesome-zsh-plugins</a></li>
<li> <a href="https://github.com/hmml/awesome-zsh">hmml/awesome-zsh</a></li>
</ol>
<h2 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h2><ol>
<li> <a href="https://github.com/jbhuang0604/awesome-tips">jbhuang0604/awesome-tips</a></li>
<li> <a href="https://github.com/writing-resources/awesome-scientific-writing">writing-resources/awesome-scientific-writing</a></li>
<li> <a href="https://github.com/alirezasamar/awesome-phd">alirezasamar/awesome-phd</a></li>
</ol>
<h2 id="LaTeX"><a href="#LaTeX" class="headerlink" title="LaTeX"></a>LaTeX</h2><ol>
<li> <a href="https://github.com/posquit0/Awesome-CV">posquit0/Awesome-CV</a></li>
<li> <a href="https://github.com/dyweb/awesome-resume-for-chinese">awesome-resume-for-chinese</a></li>
<li> <a href="https://github.com/xiaohanyu/awesome-tikz">xiaohanyu/awesome-tikz</a></li>
<li> <a href="https://github.com/egeerardyn/awesome-LaTeX">egeerardyn/awesome-LaTeX</a></li>
<li> <a href="https://github.com/xinychen/awesome-latex-drawing">xinychen/awesome-latex-drawing</a></li>
<li> <a href="https://github.com/darwiin/yaac-another-awesome-cv">darwiin/yaac-another-awesome-cv</a></li>
<li> <a href="https://github.com/huajh/awesome-latex-cv">huajh/awesome-latex-cv</a></li>
<li> <a href="https://github.com/XiangyunHuang/awesome-beamers">XiangyunHuang/awesome-beamers</a></li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li> <a href="https://github.com/topics/awesome">Awesome Lists</a></li>
</ol>
]]></content>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
</search>
