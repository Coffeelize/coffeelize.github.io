<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>智朋的个人博客</title>
  <icon>https://coffeelize.top/images/cat-avatar.jpg</icon>
  <subtitle>道阻且长，行则将至</subtitle>
  <link href="https://coffeelize.top/atom.xml" rel="self"/>
  
  <link href="https://coffeelize.top/"/>
  <updated>2022-12-07T10:56:18.600Z</updated>
  <id>https://coffeelize.top/</id>
  
  <author>
    <name>coffeelize</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Axios 异步框架简明笔记</title>
    <link href="https://coffeelize.top/posts/2fb0fb99.html"/>
    <id>https://coffeelize.top/posts/2fb0fb99.html</id>
    <published>2022-12-07T08:35:44.000Z</published>
    <updated>2022-12-07T10:56:18.600Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="Axios-异步框架简介"><a href="#Axios-异步框架简介" class="headerlink" title="Axios 异步框架简介"></a>Axios 异步框架简介</h3><p>Axios 对原生的 AJAX 进行封装，简化书写</p><h3 id="Axios-快速入门"><a href="#Axios-快速入门" class="headerlink" title="Axios 快速入门"></a>Axios 快速入门</h3><ol><li>引入 axios 的 js 文件</li><li>使用 axios 发送请求，并获取相应结果<span id="more"></span>详细步骤如下</li></ol><p>一、在 webapp 下新建 js 文件夹，拷贝 axios 的 js 文件<br>二、新建 html 文件，引入 js 文件</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/axios-0.18.0.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>三、创建 AxiosServlet</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AxiosServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>{  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>{  </span><br><span class="line">        System.out.println(<span class="string">"get..."</span>);  </span><br><span class="line">        <span class="comment">//1.接收请求参数  </span></span><br><span class="line">        String username = request.getParameter(<span class="string">"username"</span>);  </span><br><span class="line">        System.out.println(username);  </span><br><span class="line">        <span class="comment">//2.响应数据  </span></span><br><span class="line">        response.getWriter().write(<span class="string">"hello Axios"</span>);  </span><br><span class="line">    }  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>{  </span><br><span class="line">        System.out.println(<span class="string">"post..."</span>);  </span><br><span class="line">        <span class="keyword">this</span>.doGet(request, response);  </span><br><span class="line">    }  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>四、在 html 中编写 js 代码</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/axios-0.18.0.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//1.get</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">/* axios({</span></span></span><br><span class="line"><span class="comment"><span class="javascript">       method:"get",</span></span></span><br><span class="line"><span class="comment"><span class="javascript">       url:"http://localhost:8080/ajax-dmeo/axiosServlet?username=zhangsan"</span></span></span><br><span class="line"><span class="comment"><span class="javascript">     }).then(function (resp){</span></span></span><br><span class="line"><span class="comment"><span class="javascript">         alert(resp.data);</span></span></span><br><span class="line"><span class="comment"><span class="javascript">     })*/</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//2.post</span></span></span><br><span class="line"><span class="javascript">    axios({</span></span><br><span class="line"><span class="javascript">        <span class="attr">method</span>: <span class="string">"get"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">url</span>: <span class="string">"http://localhost:8080/ajax-dmeo/axiosServlet"</span>,</span></span><br><span class="line"><span class="javascript">        <span class="comment">//data是请求参数</span></span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: <span class="string">"username=zhangsan"</span></span></span><br><span class="line"><span class="javascript">    }).then(<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>) </span>{</span></span><br><span class="line"><span class="javascript">        alert(resp.data);</span></span><br><span class="line"><span class="javascript">    })</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>代码说明及注意事项</p><ol><li>axios 大括号中的为 Java 中的对象</li><li><code>.then()</code> 方法是一个回调函数，如果响应接收到了的话就自动执行</li><li><code>data: "username=zhangsan"</code>，data 是请求参数。这里可以传 JSON 格式的数据。除此之外，还可以传 JS 对象类型的数据（JSON 数据格式可以和 Java 中的对象数据格式通过某些方式进行转换），因为 Axios 框架会自动将这个 JS 对象转为 JSON 的数据格式</li><li> Get 和 Post 两种方式传递参数的方式不一样，所以在 axios 方法中传入的对象（大括号包裹的内容）的方式不一样，一个写在 URL 中，一个写在 Data 属性中</li><li><code>.then()</code> 回调函数中，function 函数中的参数名可以不为 resp，随便一个都行，保持下面对象（resp.data）和这个参数名（resp）一致即可</li><li><code>resp.data</code> 即服务器端的 Servlet 响应过来的数据 </li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">flowchart&nbsp;RL</span><br><span class="line">    b1--&gt;|"username = &amp;quot;zhangsan&amp;quot;"|servlet1</span><br><span class="line">    servlet1--&gt;|data|b1</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;subgraph&nbsp;Browsers  </span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;b1</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;b2</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;end  </span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;subgraph&nbsp;servers  </span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;servlet1</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;servlet2</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;end</span><br></pre></td></tr></tbody></table></figure><p>简单来说，Axios 实现的功能就是：通过 get 或 post 给 Servlet 传递一个参数（username=“zhangsan”），然后 Servlet 接收到这个参数，就可以进行判断的操作，根据判断的结果在给浏览器发送一个响应。浏览器收到响应数据（date）之后，就可以做出一些操作，比如弹出窗口操作。</p><h3 id="Axios-请求方式别名"><a href="#Axios-请求方式别名" class="headerlink" title="Axios 请求方式别名"></a>Axios 请求方式别名</h3><p>为了方便起见，Axios 已经为所有支持的请求方法提供了别名</p><p>发送 Get 请求</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. Get方式  </span></span><br><span class="line">axios.get(<span class="string">"http://localhost:8080/ajax-dmeo/axiosServlet?username=zhangsan"</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>)</span>{  </span><br><span class="line">    alert(resp.data);  </span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p>发送 Post 请求</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">axios.post(<span class="string">"http://localhost:8080/ajax-dmeo/axiosServlet?username=zhangsan"</span>,<span class="string">"username=zhangsan"</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">resp</span>)</span>{  </span><br><span class="line">    alert(resp.data);  </span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p>原生的 Axios 书写方式 VS 别名的简化书写方式</p><ul><li>原生的书写格式：阅读性较好</li><li>别名的方式：代码量少，基本上只需要填写必要的参数信息</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Axios-异步框架简介&quot;&gt;&lt;a href=&quot;#Axios-异步框架简介&quot; class=&quot;headerlink&quot; title=&quot;Axios 异步框架简介&quot;&gt;&lt;/a&gt;Axios 异步框架简介&lt;/h3&gt;&lt;p&gt;Axios 对原生的 AJAX 进行封装，简化书写&lt;/p&gt;
&lt;h3 id=&quot;Axios-快速入门&quot;&gt;&lt;a href=&quot;#Axios-快速入门&quot; class=&quot;headerlink&quot; title=&quot;Axios 快速入门&quot;&gt;&lt;/a&gt;Axios 快速入门&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;引入 axios 的 js 文件&lt;/li&gt;
&lt;li&gt;使用 axios 发送请求，并获取相应结果</summary>
    
    
    
    
    <category term="AJAX" scheme="https://coffeelize.top/tags/AJAX/"/>
    
    <category term="Front End" scheme="https://coffeelize.top/tags/Front-End/"/>
    
    <category term="Java" scheme="https://coffeelize.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Mermaid 简明教程</title>
    <link href="https://coffeelize.top/posts/89543310.html"/>
    <id>https://coffeelize.top/posts/89543310.html</id>
    <published>2022-12-07T00:40:20.000Z</published>
    <updated>2022-12-07T08:54:14.665Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li>Mermaid 官方文档：<a href="https://mermaid-js.github.io/mermaid/#/">mermaid - Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs.</a></li><li>Github：<a href="https://github.com/mermaid-js/mermaid/blob/develop/README.zh-CN.md">Mermaid 中文说明文档</a></li><li> Mermaid 在线编辑 Github：<a href="https://github.com/mermaidjs/mermaid-live-editor">mermaid-live-editor</a></li><li>VScode 插件：<a href="https://marketplace.visualstudio.com/items?itemName=bierner.markdown-mermaid">Markdown Preview Mermaid Support</a></li><li>VScode 插件：<a href="https://marketplace.visualstudio.com/items?itemName=bpruitt-goddard.mermaid-markdown-syntax-highlighting">Mermaid Markdown Syntax Highlighting</a></li></ol><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><ol><li>个人博客：<a href="https://ghobam.com/2022/05/06/Mermaid%E6%B5%81%E7%A8%8B%E5%9B%BE/">Mermaid 流程图 - Sherwood 的博客</a></li></ol><span id="more"></span><h3 id="流程图快速入门"><a href="#流程图快速入门" class="headerlink" title="流程图快速入门"></a>流程图快速入门</h3><h4 id="案例-1：常规流程图"><a href="#案例-1：常规流程图" class="headerlink" title="案例 1：常规流程图"></a>案例 1：常规流程图</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[Christmas] --&gt;|Get money| B(Go shopping)</span><br><span class="line">    B --&gt; C{Let me think}</span><br><span class="line">    C --&gt;|One| D[Laptop]</span><br><span class="line">    C --&gt;|Two| E[iPhone]</span><br><span class="line">    C --&gt;|Three| F[Car]</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">    A[Christmas] --&gt;|Get money| B(Go shopping)</span><br><span class="line">    B --&gt; C{Let me think}</span><br><span class="line">    C --&gt;|One| D[Laptop]</span><br><span class="line">    C --&gt;|Two| E[iPhone]</span><br><span class="line">    C --&gt;|Three| F[Car]</span><br></pre></td></tr></tbody></table></figure><ul><li><p>第一行：TD（Top down）自上而下；<br>除此之外，还有上 (Top) 下 (Bottom) 左 (Left) 右 (Right)，可以两两组合来确定流程图的方向</p></li><li><p>第二行：中括号表示图形中的矩形，圆括号为圆角矩形，两竖线之间的表示箭头上的文字<br>除此之外，还有各种箭头和图形样式，这里不再列举，详细请查看官方文档和 <a href="https://ghobam.com/2022/05/06/Mermaid%E6%B5%81%E7%A8%8B%E5%9B%BE/">Mermaid 流程图 - Sherwood 的博客</a></p></li></ul><h4 id="案例-2：带有子图的流程图"><a href="#案例-2：带有子图的流程图" class="headerlink" title="案例 2：带有子图的流程图"></a>案例 2：带有子图的流程图</h4><p>子图的基本语法为</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">subgraph title</span><br><span class="line"> graph definition</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure><p>完整案例如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">flowchart&nbsp;RL</span><br><span class="line">    b1--&gt;|"username = &amp;quot;zhangsan&amp;quot;"|servlet1</span><br><span class="line">    servlet1--&gt;|data|b1</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;subgraph&nbsp;Browsers  </span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;b1</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;b2</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;end  </span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;subgraph&nbsp;servers  </span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;servlet1</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;servlet2</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;end</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">flowchart&nbsp;RL</span><br><span class="line">    b1--&gt;|"username = &amp;quot;zhangsan&amp;quot;"|servlet1</span><br><span class="line">    servlet1--&gt;|data|b1</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;subgraph&nbsp;Browsers  </span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;b1</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;b2</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;end  </span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;subgraph&nbsp;servers  </span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;servlet1</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;servlet2</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;end</span><br></pre></td></tr></tbody></table></figure><p>特别注意：两竖线中的内容（也就是箭头上的文字）不能包含双引号，在 Mermaid 中算是特殊符号，请查阅 <a href="https://ghobam.com/2022/05/06/Mermaid%E6%B5%81%E7%A8%8B%E5%9B%BE/">Mermaid 流程图 - Sherwood 的博客</a>，需要额外进行处理。<code>&amp;quot;</code> 来表示双引号。所以，在箭头上还是尽量少用双引号吧😀</p><p>以下方式均会导致绘图出错</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b1--&gt;|1.username = '"zhangsan"'|servlet1</span><br><span class="line">b1--&gt;'|1.username = "zhangsan"|'servlet1</span><br><span class="line">b1--&gt;|'1.username = "zhangsan"'|servlet1</span><br></pre></td></tr></tbody></table></figure><p>正确的处理方式</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b1--&gt;|"username = &amp;quot;zhangsan&amp;quot;"|servlet1</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Mermaid 官方文档：&lt;a href=&quot;https://mermaid-js.github.io/mermaid/#/&quot;&gt;mermaid - Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams, gantt charts and git graphs.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github：&lt;a href=&quot;https://github.com/mermaid-js/mermaid/blob/develop/README.zh-CN.md&quot;&gt;Mermaid 中文说明文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; Mermaid 在线编辑 Github：&lt;a href=&quot;https://github.com/mermaidjs/mermaid-live-editor&quot;&gt;mermaid-live-editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VScode 插件：&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bierner.markdown-mermaid&quot;&gt;Markdown Preview Mermaid Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VScode 插件：&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=bpruitt-goddard.mermaid-markdown-syntax-highlighting&quot;&gt;Mermaid Markdown Syntax Highlighting&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;推荐阅读&quot;&gt;&lt;a href=&quot;#推荐阅读&quot; class=&quot;headerlink&quot; title=&quot;推荐阅读&quot;&gt;&lt;/a&gt;推荐阅读&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;个人博客：&lt;a href=&quot;https://ghobam.com/2022/05/06/Mermaid%E6%B5%81%E7%A8%8B%E5%9B%BE/&quot;&gt;Mermaid 流程图 - Sherwood 的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="绘图" scheme="https://coffeelize.top/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Mermaid" scheme="https://coffeelize.top/tags/Mermaid/"/>
    
  </entry>
  
  <entry>
    <title>Java-AJAX 快速入门</title>
    <link href="https://coffeelize.top/posts/d92ca625.html"/>
    <id>https://coffeelize.top/posts/d92ca625.html</id>
    <published>2022-12-06T06:17:16.000Z</published>
    <updated>2022-12-07T08:54:14.665Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="AJAX-简介"><a href="#AJAX-简介" class="headerlink" title="AJAX 简介"></a>AJAX 简介</h3><p>AJAX(Asynchronous JavaScirpt And XML)：<strong>异步</strong> 的 JavaScript 和 XML</p><span id="more"></span><p>同步和异步的比较如图所示<br><img data-src="https://s2.loli.net/2022/12/07/pX1lt9kHqKyhiZB.png" alt="03-同步和异步的比较.png"></p><p>AJAX 作用：</p><ol><li>与服务器进行数据交换：通过 AJAX 可以给服务器发送请求，并获取服务器响应的数据<ol><li>使用 AJAX 和服务器进行通信，就可以使用 HTML+AJAX 来替换 JSP 页面了</li><li>使用它的一个重要原因是可以用来替换 JSP 页面；JSP 做不到前后端分离</li></ol></li><li>异步交互：可以在 <strong>不重新加载整个页面</strong> 的情况下，与服务器交换数据并 <strong>更新部分</strong> 网页端技术，如：搜索联想，用户名是否可用校验等等</li></ol><p>之前的做法：JSP<br><img data-src="https://s2.loli.net/2022/12/07/O9PYR4Xtsy7Tqch.png" alt="01-响应请求JSP做法.png"></p><p>现在的做法：AJAX<br><img data-src="https://s2.loli.net/2022/12/07/mhD2onQgtAJT5qZ.png" alt="02-响应请求AJAX做法.png"></p><h3 id="AJAX-快速入门"><a href="#AJAX-快速入门" class="headerlink" title="AJAX 快速入门"></a>AJAX 快速入门</h3><ol><li>编写 AjaxServlet，并使用 response 输出字符串（后端代码）</li><li>创建 XMLHttpRequest 对象：损失和服务器交换数据（前端代码）</li><li>想服务器发送请求（前端代码）</li><li>获取服务器响应数据（前端代码）</li></ol><p>一、编写 AjaxServlet，并使用 response 输出字符串</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet("/ajaxServlet")</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AjaxServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>{  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>{  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//1.响应数据  </span></span><br><span class="line">        response.getWriter().write(<span class="string">"hello AJAX"</span>);  </span><br><span class="line">    }  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>{  </span><br><span class="line">        <span class="keyword">this</span>.doGet(request, response);  </span><br><span class="line">    }  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>二、创建核心对象</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhttp;  </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) {  </span><br><span class="line">  xhttp = <span class="keyword">new</span> XMLHttpRequest();  </span><br><span class="line">} <span class="keyword">else</span> {  </span><br><span class="line">  <span class="comment">// code for IE6, IE5  </span></span><br><span class="line">  xhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>代码可参考 W3C：<a href="https://www.w3school.com.cn/js/js_ajax_http.asp">AJAX - XMLHttpRequest 对象</a><br>![[Pasted image 20221206144624.png]]</p><p>三、发送请求</p><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xhttp.open(<span class="string">"GET"</span>, <span class="string">"http://localhost:8080/ajax-dmeo/ajaxServlet"</span>);</span><br><span class="line">xhttp.send();</span><br></pre></td></tr></tbody></table></figure><p>注意：这里的路径是全路径，因为后期项目的前端和后端需要部署在不同的服务器上，需要使用绝对路径而不是相对路径</p><p>代码可参考 W3C：<a href="https://www.w3school.com.cn/js/js_ajax_http_send.asp">AJAX - XMLHttpRequest</a></p><p>四、获取响应</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{  </span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="built_in">this</span>.status == <span class="number">200</span>) {  </span><br><span class="line">            alert(<span class="built_in">this</span>.responseText)  </span><br><span class="line">    }  </span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure><p>代码参考 W3C：<a href="https://www.w3school.com.cn/js/js_ajax_http_response.asp">AJAX - 服务器响应</a></p><h3 id="AJAX完整案例"><a href="#AJAX完整案例" class="headerlink" title="AJAX完整案例"></a>AJAX 完整案例</h3><p>注意：还需要我们在服务器端创建一个用于响应浏览器的 Servlet，如以上步骤一所示（一、编写 AjaxServlet，并使用 response 输出字符串）</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">  </span></span><br><span class="line"><span class="javascript">    <span class="comment">//1.创建核心对象  </span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> xhttp;  </span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) {  </span></span><br><span class="line"><span class="javascript">      xhttp = <span class="keyword">new</span> XMLHttpRequest();  </span></span><br><span class="line"><span class="javascript">    } <span class="keyword">else</span> {  </span></span><br><span class="line"><span class="javascript">      <span class="comment">// code for IE6, IE5  </span></span></span><br><span class="line"><span class="javascript">      xhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);  </span></span><br><span class="line"><span class="javascript">    }  </span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//2.发送请求  </span></span></span><br><span class="line"><span class="javascript">    xhttp.open(<span class="string">"GET"</span>, <span class="string">"http://localhost:8080/ajax-dmeo/ajaxServlet"</span>);  </span></span><br><span class="line"><span class="javascript">    xhttp.send();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//3.获取响应</span></span></span><br><span class="line"><span class="javascript">    xhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{  </span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="built_in">this</span>.readyState == <span class="number">4</span> &amp;&amp; <span class="built_in">this</span>.status == <span class="number">200</span>) {  </span></span><br><span class="line"><span class="javascript">                alert(<span class="built_in">this</span>.responseText)  </span></span><br><span class="line"><span class="javascript">        }  </span></span><br><span class="line"><span class="javascript">    };  </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;AJAX-简介&quot;&gt;&lt;a href=&quot;#AJAX-简介&quot; class=&quot;headerlink&quot; title=&quot;AJAX 简介&quot;&gt;&lt;/a&gt;AJAX 简介&lt;/h3&gt;&lt;p&gt;AJAX(Asynchronous JavaScirpt And XML)：&lt;strong&gt;异步&lt;/strong&gt; 的 JavaScript 和 XML&lt;/p&gt;</summary>
    
    
    
    
    <category term="AJAX" scheme="https://coffeelize.top/tags/AJAX/"/>
    
    <category term="Front End" scheme="https://coffeelize.top/tags/Front-End/"/>
    
    <category term="Java" scheme="https://coffeelize.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Intellij 创建 Servlet 模板</title>
    <link href="https://coffeelize.top/posts/5f8f3d0b.html"/>
    <id>https://coffeelize.top/posts/5f8f3d0b.html</id>
    <published>2022-12-05T08:37:38.000Z</published>
    <updated>2022-12-05T09:51:56.725Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="IDEA-创建-Servlet-模板"><a href="#IDEA-创建-Servlet-模板" class="headerlink" title="IDEA 创建 Servlet 模板"></a>IDEA 创建 Servlet 模板</h3><p>使用通用方式获取请求参数后，屏蔽了 GET 和 POST 的请求方式代码的不同，则代码可以定义为如下格式：</p><span id="more"></span><p><img data-src="https://s2.loli.net/2022/12/05/1uHOfFrKtb4cXpS.png" alt="01-Get和Post请求的通用方式.png"></p><p>那么，可以使用 Servlet 模板创建来 Servlet 更高效，设置如下</p><p><img data-src="https://s2.loli.net/2022/12/05/Ed1BSvMNxkbTuwK.png" alt="02-Servlet模板设置页面.png"></p><p>Servlet Annotated Class 模板如下</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">if</span> (${PACKAGE_NAME} &amp;&amp; ${PACKAGE_NAME} != <span class="string">""</span>)<span class="keyword">package</span> ${PACKAGE_NAME};#end  </span><br><span class="line">#parse(<span class="string">"File Header.java"</span>)  </span><br><span class="line">  </span><br><span class="line">#<span class="keyword">if</span> ($JAVAEE_TYPE == <span class="string">"jakarta"</span>)  </span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.*;  </span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.http.*;  </span><br><span class="line"><span class="keyword">import</span> jakarta.servlet.annotation.*;  </span><br><span class="line">#<span class="keyword">else</span>  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;  </span><br><span class="line">#end  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">@WebServlet("/${Entity_Name}")</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> $</span>{Class_Name} extends HttpServlet {  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>{  </span><br><span class="line">  </span><br><span class="line">    }  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>{  </span><br><span class="line">        <span class="keyword">this</span>.doGet(request,response);  </span><br><span class="line">    }  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>下次新建 Servlet 时，就会通过设置好的模板来创建，为我们减少重复的操作<br><img data-src="https://s2.loli.net/2022/12/05/MkWiKY4wlNTcSnu.png" alt="03-通过Servlet模板来创建Servlet.png"></p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.*;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;  </span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.*;  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">@WebServlet("/ServletDemo1")</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>{  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>{  </span><br><span class="line">  </span><br><span class="line">    }  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>{  </span><br><span class="line">        <span class="keyword">this</span>.doGet(request, response);  </span><br><span class="line">    }  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>使用这项操作前，请确保 pom.xml 中已经导入了 servlet 的依赖。因为模板中存在 <code>@WebServlet</code> 注解，没有 servlet 依赖的话 IDEA 可不认识这个注解，新建的 Servlet 就不会应用模板</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--servlet--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;IDEA-创建-Servlet-模板&quot;&gt;&lt;a href=&quot;#IDEA-创建-Servlet-模板&quot; class=&quot;headerlink&quot; title=&quot;IDEA 创建 Servlet 模板&quot;&gt;&lt;/a&gt;IDEA 创建 Servlet 模板&lt;/h3&gt;&lt;p&gt;使用通用方式获取请求参数后，屏蔽了 GET 和 POST 的请求方式代码的不同，则代码可以定义为如下格式：&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://coffeelize.top/tags/Java/"/>
    
    <category term="Intellij" scheme="https://coffeelize.top/tags/Intellij/"/>
    
    <category term="Servlet" scheme="https://coffeelize.top/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb 常见问题汇总</title>
    <link href="https://coffeelize.top/posts/207efebe.html"/>
    <id>https://coffeelize.top/posts/207efebe.html</id>
    <published>2022-12-05T08:23:12.000Z</published>
    <updated>2022-12-05T09:52:03.674Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="新建菜单中，没有-servlet-选项"><a href="#新建菜单中，没有-servlet-选项" class="headerlink" title="新建菜单中，没有 servlet 选项"></a>新建菜单中，没有 servlet 选项</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><span id="more"></span><p><img data-src="https://s2.loli.net/2022/12/05/W5zcDJ8hX49AENa.png" alt="01-右键菜单没有Servlet选项.png"></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li>通过 Maven 导入 servlet 依赖</li><li>然后在项目中的文件夹，右键，就有新建 servlet 的选项了</li></ol><p><img data-src="https://s2.loli.net/2022/12/05/EDZo2gVNCOKQFat.png" alt="02-右键菜单中有Servlet选项.png"></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://blog.csdn.net/Howard_Roark/article/details/107046920">IDEA 右键新建 new 没有 servlet 选项的问题_破的軍的博客 - CSDN 博客_ideanew 不了 servlet</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;新建菜单中，没有-servlet-选项&quot;&gt;&lt;a href=&quot;#新建菜单中，没有-servlet-选项&quot; class=&quot;headerlink&quot; title=&quot;新建菜单中，没有 servlet 选项&quot;&gt;&lt;/a&gt;新建菜单中，没有 servlet 选项&lt;/h2&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;</summary>
    
    
    
    
    <category term="Interllij" scheme="https://coffeelize.top/tags/Interllij/"/>
    
    <category term="JavaWeb" scheme="https://coffeelize.top/tags/JavaWeb/"/>
    
    <category term="Navigation" scheme="https://coffeelize.top/tags/Navigation/"/>
    
  </entry>
  
  <entry>
    <title>通过 Maven 骨架创建 Maven Web 项目时报错</title>
    <link href="https://coffeelize.top/posts/11af4f01.html"/>
    <id>https://coffeelize.top/posts/11af4f01.html</id>
    <published>2022-12-05T04:29:30.000Z</published>
    <updated>2022-12-05T09:47:38.607Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>通过 Maven Archetype 创建 Maven Web 项目时，发生报错，报错的详细信息如下</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not transfer metadata org.apache.maven.plugins:maven-archetype-plugin/maven-metadata.xml from/to central (https://repo.maven.apache.org/maven2): transfer failed for https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-archetype-plugin/maven-metadata.xml</span><br></pre></td></tr></tbody></table></figure><span id="more"></span><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>在设置 ⇒ 找到图片中所在的位置 ⇒ 如图所示添加如下代码 </li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true</span><br></pre></td></tr></tbody></table></figure><p><img data-src="https://s2.loli.net/2022/12/05/4dgxHjiSXa62GDt.png" alt="01-设置Maven运行程序-VM选项.png"></p><ol start="2"><li>文件⇒新建项目设置⇒新项目的设置</li></ol><p>进入到设置后，与第 1 步进行相同的操作</p><p><img data-src="https://s2.loli.net/2022/12/05/zyviTukXYeBOW1f.png" alt="02-Intellij新建项目设置.png"></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://blog.csdn.net/weixin_51735258/article/details/124240026">解决 Could not transfer metadata org.apache.maven.plugins:maven-archetype-plugin/.._报错 404 的博客 - CSDN 博客_could not transfer</a></li><li><a href="https://blog.csdn.net/hacknetY/article/details/117375772?spm=1001.2101.3001.6650.4&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-4-117375772-blog-124240026.pc_relevant_multi_platform_whitelistv3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-4-117375772-blog-124240026.pc_relevant_multi_platform_whitelistv3&amp;utm_relevant_index=7">解决 Could not transfer metadata org.apache.maven.plugins:maven_hacknetY 的博客 - CSDN 博客_could not transfer</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;通过 Maven Archetype 创建 Maven Web 项目时，发生报错，报错的详细信息如下&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Could not transfer metadata org.apache.maven.plugins:maven-archetype-plugin/maven-metadata.xml from/to central (https://repo.maven.apache.org/maven2): transfer failed for https://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-archetype-plugin/maven-metadata.xml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="Maven" scheme="https://coffeelize.top/tags/Maven/"/>
    
    <category term="Intellij" scheme="https://coffeelize.top/tags/Intellij/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb 常用配置及依赖</title>
    <link href="https://coffeelize.top/posts/5a58d3ae.html"/>
    <id>https://coffeelize.top/posts/5a58d3ae.html</id>
    <published>2022-12-04T12:25:30.000Z</published>
    <updated>2022-12-07T08:15:23.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="mybatis-config-xml"><a href="#mybatis-config-xml" class="headerlink" title="mybatis-config.xml"></a>mybatis-config.xml</h3><p>使用说明</p><ol><li>注意修改别名</li><li>注意修改数据库信息中的 URL</li><li> 注意驱动对应的 MySQL 版本为 8</li><li> 注意修改 SQL 的映射文件名</li><li>文件存放在 resource 资源文件夹下 </li></ol><span id="more"></span><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"https://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--起别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.itheima.pojo"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--数据库的连接信息--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql:///db1?useSSL=false<span class="symbol">&amp;amp;</span>useServerPrepStmts=true"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"wwww"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--包扫描--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.itheima.mapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="UserMapper-xml"><a href="#UserMapper-xml" class="headerlink" title="UserMapper.xml"></a>UserMapper.xml</h3><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"https://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    namespace：名称空间，需要链接到UserMapper接口</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.itheima.mapper.UserMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--以下开始填写SQL语句--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectAll"</span> <span class="attr">resultType</span>=<span class="string">"Brand"</span>&gt;</span></span><br><span class="line">        select * from tb_user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="logback-xml"><a href="#logback-xml" class="headerlink" title="logback.xml"></a>logback.xml</h3><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        CONSOLE ：表示当前的日志信息是可以输出到控制台的。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"Console"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>[%level] %blue(%d{HH:mm:ss.SSS}) %cyan([%thread]) %boldGreen(%logger{15}) - %msg %n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.itheima"</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"Console"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF</span></span><br><span class="line"><span class="comment">     ， 默认debug</span></span><br><span class="line"><span class="comment">      &lt;root&gt;可以包含零个或多个&lt;appender-ref&gt;元素，标识这个输出位置将会被本日志级别控制。</span></span><br><span class="line"><span class="comment">      --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"Console"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="常用依赖"><a href="#常用依赖" class="headerlink" title="常用依赖"></a>常用依赖</h3><p>使用说明</p><ol><li>内容添加到 pom.xml 文件中 </li></ol><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--servlet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mybatis依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--加载mysql驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--junit单元测试--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 添加slf4j日志api --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 添加logback-classic依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 添加logback-core依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--防止运行Tomcat报错--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.compiler.encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">maven.compiler.encoding</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>14<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>14<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>14<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--Tomcat的插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&lt;port&gt;80&lt;/port&gt;--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--&lt;path&gt;/&lt;/path&gt;--&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h3><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--JSP--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--JSTL标签--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>使用 JSTL 标签时，需要在 jsp 文件中引入 JSTL 标签库</p><figure class="highlight jsp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;  </span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;  </span><br></pre></td></tr></tbody></table></figure><h3 id="SqlSessionFactoryUtil-java"><a href="#SqlSessionFactoryUtil-java" class="headerlink" title="SqlSessionFactoryUtil.java"></a>SqlSessionFactoryUtil.java</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.util;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;  </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;  </span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SqlSessionFactoryUtils</span> </span>{  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">static</span> {  </span><br><span class="line">        <span class="comment">//静态代码块会随着类的加载而自动执行，且只执行一次  </span></span><br><span class="line">  </span><br><span class="line">        <span class="keyword">try</span> {  </span><br><span class="line">            String resource = <span class="string">"mybatis-config.xml"</span>;  </span><br><span class="line">            InputStream inputStream = Resources.getResourceAsStream(resource);  </span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);  </span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        }  </span><br><span class="line">    }  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSessionFactory <span class="title">getSqlSessionFactory</span><span class="params">()</span></span>{  </span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory;  </span><br><span class="line">    }  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;mybatis-config-xml&quot;&gt;&lt;a href=&quot;#mybatis-config-xml&quot; class=&quot;headerlink&quot; title=&quot;mybatis-config.xml&quot;&gt;&lt;/a&gt;mybatis-config.xml&lt;/h3&gt;&lt;p&gt;使用说明&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注意修改别名&lt;/li&gt;
&lt;li&gt;注意修改数据库信息中的 URL&lt;/li&gt;
&lt;li&gt; 注意驱动对应的 MySQL 版本为 8&lt;/li&gt;
&lt;li&gt; 注意修改 SQL 的映射文件名&lt;/li&gt;
&lt;li&gt;文件存放在 resource 资源文件夹下 &lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://coffeelize.top/tags/Java/"/>
    
    <category term="MySQL" scheme="https://coffeelize.top/tags/MySQL/"/>
    
    <category term="JavaWeb" scheme="https://coffeelize.top/tags/JavaWeb/"/>
    
    <category term="MyBatis" scheme="https://coffeelize.top/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat 启动服务报错</title>
    <link href="https://coffeelize.top/posts/3c9f696f.html"/>
    <id>https://coffeelize.top/posts/3c9f696f.html</id>
    <published>2022-12-04T02:52:52.000Z</published>
    <updated>2022-12-05T09:47:38.607Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h3><p>创建 Web 项目，学习 Servlet 的过程中，通过 Tomcat 启动这个项目，提示报错：<code>不再支持源选项 5。请使用 7 或更高版本</code></p><p><img data-src="https://s2.loli.net/2022/12/05/XQVRS1hTcyzp7AE.png" alt="01-Intellij启动Tomcat报错.png"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p><code>pom.xml</code> 文件中增加 maven 编译的 <code>java.version</code>&nbsp;jdk 版本设置，以及 <code>maven.compiler.source</code>&nbsp;资源编译 jdk 版本设置和 <code>maven.compiler.target</code>&nbsp;资源构建 jdk 版本设置</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">maven.compiler.encoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>14<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>14<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>14<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://blog.csdn.net/moshowgame/article/details/81369327">maven 报错：不再支持源选项 5。请使用 6 或更高版本。_Moshow 郑锴的博客 - CSDN 博客</a></li></ol>]]></content>
    
    
      
      
    <summary type="html"></summary>
      
    
    
    
    
    <category term="Tomcat" scheme="https://coffeelize.top/tags/Tomcat/"/>
    
    <category term="Servlet" scheme="https://coffeelize.top/tags/Servlet/"/>
    
    <category term="intelliJ" scheme="https://coffeelize.top/tags/intelliJ/"/>
    
  </entry>
  
  <entry>
    <title>Intellij 关联 MySQL 数据库</title>
    <link href="https://coffeelize.top/posts/db1d2eb3.html"/>
    <id>https://coffeelize.top/posts/db1d2eb3.html</id>
    <published>2022-12-02T13:57:57.000Z</published>
    <updated>2022-12-03T15:32:49.173Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="关联数据库"><a href="#关联数据库" class="headerlink" title="关联数据库"></a>关联数据库</h3><ol><li>如下图所示，点击右侧的数据库，然后弹出面板，点击新建，选择 MySQL 数据库</li></ol><span id="more"></span><p><img data-src="https://s2.loli.net/2022/12/03/jMTZxbPGvpB3JcF.png" alt="01-打开数据库连接面板.png"></p><ol start="2"><li>然后就是对数据库的信息配置一下，下载好驱动，测试连接，Nice，连接成功</li></ol><p><img data-src="https://s2.loli.net/2022/12/03/jxuc4J3i9a6RQz2.png" alt="02-配置数据库信息.png"></p><ol start="3"><li>之后，就可以直接在 IDEA 中直接查看数据库中的内容了</li></ol><p><img data-src="https://s2.loli.net/2022/12/03/RLpXJjCWSyrUBlK.png" alt="03-下载数据库连接驱动.png"></p><h3 id="容易出现的问题"><a href="#容易出现的问题" class="headerlink" title="容易出现的问题"></a>容易出现的问题</h3><p>比如在运行 MaBatis 项目，昨天运行还能正常运行，重启电脑后再次运行就出现了如下的报错信息，搜索一下，已有解决方案：<a href="https://blog.csdn.net/u013360850/article/details/80373604">MySQL 8.0 Public Key Retrieval is not allowed 错误的解决方法_呜呜呜啦啦啦的博客 - CSDN 博客</a></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Public Key Retrieval is not allowed</span><br></pre></td></tr></tbody></table></figure><p>解决方案：刷新一下数据库再运行项目即可<br><img data-src="https://s2.loli.net/2022/12/03/QbTDVoNxvytRU3a.png" alt="04-刷新数据库.png"></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://blog.csdn.net/u013360850/article/details/80373604">MySQL 8.0 Public Key Retrieval is not allowed 错误的解决方法_呜呜呜啦啦啦的博客 - CSDN 博客</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;关联数据库&quot;&gt;&lt;a href=&quot;#关联数据库&quot; class=&quot;headerlink&quot; title=&quot;关联数据库&quot;&gt;&lt;/a&gt;关联数据库&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;如下图所示，点击右侧的数据库，然后弹出面板，点击新建，选择 MySQL 数据库&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://coffeelize.top/tags/Java/"/>
    
    <category term="Intellij" scheme="https://coffeelize.top/tags/Intellij/"/>
    
    <category term="MySQL" scheme="https://coffeelize.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Intellij 注释不顶格</title>
    <link href="https://coffeelize.top/posts/b35c9eb3.html"/>
    <id>https://coffeelize.top/posts/b35c9eb3.html</id>
    <published>2022-12-02T07:53:20.000Z</published>
    <updated>2022-12-03T15:32:49.174Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://blog.csdn.net/aiming66/article/details/117284406">idea 注释不顶格（不在行首）_aiming66 的博客 - CSDN 博客_idea 注释不定格</a></li></ol><span id="more"></span><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>新建的注释，默认顶格创建，好丑<br><img data-src="https://s2.loli.net/2022/12/03/XHjUCin9pDhlY3d.png" alt="01-注释默认为定格书写.png"></p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>IDE 中进行设置，取消 <code>将行注释在第一列</code> 的勾，最好把 <code>注释快在第一列</code> 前面的勾也去掉；对于其他文件，比如 xml 文件也是这个操作<br><img data-src="https://s2.loli.net/2022/12/03/JIzXpMjnPAYLvth.png" alt="02-取消注释顶格书写.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/aiming66/article/details/117284406&quot;&gt;idea 注释不顶格（不在行首）_aiming66 的博客 - CSDN 博客_idea 注释不定格&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://coffeelize.top/tags/Java/"/>
    
    <category term="Intellij" scheme="https://coffeelize.top/tags/Intellij/"/>
    
  </entry>
  
  <entry>
    <title>IDEA 中使用 Tomcat</title>
    <link href="https://coffeelize.top/posts/1d1f95b6.html"/>
    <id>https://coffeelize.top/posts/1d1f95b6.html</id>
    <published>2022-12-02T03:47:30.000Z</published>
    <updated>2022-12-05T09:47:38.605Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这里主要介绍通过插件的方式运行 Tomcat</p><span id="more"></span><h4 id="一、集成本地-Tomcat"><a href="#一、集成本地-Tomcat" class="headerlink" title="一、集成本地 Tomcat"></a>一、集成本地 Tomcat</h4><p>将本地的 Tomcat 集成到 IDEA 中，这里网上参考资料较多不再介绍</p><h4 id="二、通过插件运行-Tomcat"><a href="#二、通过插件运行-Tomcat" class="headerlink" title="二、通过插件运行 Tomcat"></a>二、通过插件运行 Tomcat</h4><ol><li>在 pom.xml 中添加 tomcat 插件</li></ol><p>Alt+Enter 导入插件模板<br><img data-src="https://s2.loli.net/2022/12/05/JXguRNAT7VEqe6z.png" alt="01-快捷键导入插件模板.png"></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--Tomcat的插件--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>安装 Maven Helper 插件</li></ol><p>插件市场搜索 Maven Helper 安装插件<br><img data-src="https://s2.loli.net/2022/12/05/PF3gHkYvERVqzSm.png" alt="02-插件市场安装Maven Helper插件.png"></p><ol start="3"><li>以上两步操作完成之后，选中项目，右键 –&gt;Run Maven–&gt;tomcat7:run 启动项目</li></ol><p><img data-src="https://s2.loli.net/2022/12/05/Mn9jU6RADvyxPVF.png" alt="03-通过插件运行Tomcat.png"></p><ol start="4"><li>修改 tomcat 的端口和路径 (非必要设置)</li></ol><p>说明：如果没有配置端口号和路径的话，默认端口号是 8080，默认的访问路径是 <code>/+项目(或模块)名称</code></p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--Tomcat的插件--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>80<span class="tag">&lt;/<span class="name">port</span>&gt;</span> <span class="comment">&lt;!--项目运行端口--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span> <span class="comment">&lt;!--项目访问路径--&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>缺点：通过插件的方式使用 Tomcat，插件目前只支持 tomcat7 的版本</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这里主要介绍通过插件的方式运行 Tomcat&lt;/p&gt;</summary>
    
    
    
    
    <category term="Intellij" scheme="https://coffeelize.top/tags/Intellij/"/>
    
    <category term="Tomcat" scheme="https://coffeelize.top/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>Maven 基础</title>
    <link href="https://coffeelize.top/posts/195cf5d1.html"/>
    <id>https://coffeelize.top/posts/195cf5d1.html</id>
    <published>2022-12-01T12:59:30.000Z</published>
    <updated>2022-12-03T15:32:49.175Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="Maven主要功能"><a href="#Maven主要功能" class="headerlink" title="Maven主要功能"></a>Maven 主要功能</h3><p>Maven 是专门用于管理和构建 Java 项目的工具，它的主要功能有：</p><ul><li>提供了一套标准化的项目结构</li><li>提供了一套标准化的构建流程（编译，测试，打包，发布…）</li><li>提供了一套依赖管理机制</li></ul><span id="more"></span><h3 id="标准化的项目结构"><a href="#标准化的项目结构" class="headerlink" title="标准化的项目结构"></a>标准化的项目结构</h3><p>不同 IDE 之间，项目结构不一样，不通用<br><img data-src="https://s2.loli.net/2022/12/03/2UqzrDVtQE4JFci.png" alt="01-不同IDE之间项目结构不一致.png"></p><p>所有 IDE 使用 Maven 构建的项目结构完全一样，所有 IDE 创建的 Maven 项目都可以通用</p><p>Maven 的项目结构<br><img data-src="https://s2.loli.net/2022/12/03/2yNB1P6z37dorsf.png" alt="02-Maven项目结构.png"></p><h3 id="标准化的构建流程"><a href="#标准化的构建流程" class="headerlink" title="标准化的构建流程"></a>标准化的构建流程</h3><p>源代码⇒编译⇒测试⇒打包⇒发布，Maven 提供了一套简单的命令来完成项目构建</p><h3 id="提供了一套依赖管理机制"><a href="#提供了一套依赖管理机制" class="headerlink" title="提供了一套依赖管理机制"></a>提供了一套依赖管理机制</h3><p>比如 JDBC，需要使用的 MySQL 的驱动包，依赖管理其实就是管理你项目所依赖的第三方资源（Jar 包、依赖），原先我们是如何操作的呢：</p><ol><li>下载 jar 包</li><li>将 jar 包复制到 lib 文件夹里</li><li>右键 jar 包，作为库</li></ol><p>那 Maven 是如何管理依赖的呢</p><ol><li>Maven 使用标准的 <strong>坐标</strong> 配置来管理各种依赖</li><li>只需要简单的配置就可以完成依赖管理<br><img data-src="https://s2.loli.net/2022/12/03/l4dLFEwaQbsVCgB.png" alt="03-通过坐标管理依赖.png"></li></ol><h3 id="Maven-简介"><a href="#Maven-简介" class="headerlink" title="Maven 简介"></a>Maven 简介</h3><p>Apache Maven 是一个项目管理和构建工具，它基于项目对象模型（POM）的概念，通过一小段描述信息来管理项目的构建、报告和文档</p><p>仓库分类</p><ul><li>本地仓库</li><li>中央仓库：有 Maven 团队维护的全球唯一的仓库（免费的开源的 jar 包）</li><li>远程仓库（私服）：一般有公司团队搭建的私有仓库（可以存放一下自己的公司的和一些可能具有版权的 jar 包）</li></ul><p>查找流程：首先会查找本地仓库，如果本地仓库没有，则去中央仓库查找是否有，有的话就会 <strong>自动下载</strong> 到本地仓库</p><h3 id="Maven-的安装和配置"><a href="#Maven-的安装和配置" class="headerlink" title="Maven 的安装和配置"></a>Maven 的安装和配置</h3><ol><li>解压即可安装</li><li>配置环境变量</li></ol><p>下图中的 Maven 文件夹呢就是包含 bin 文件夹的文件夹<br><img data-src="https://s2.loli.net/2022/12/03/PiCMQwYabNHjqLF.png" alt="04-配置Maven环境路径1.png"></p><p>将 bin 目录添加到 Path 目录中<br><img data-src="https://s2.loli.net/2022/12/03/2Lig39VGsfNqd7Q.png" alt="05-配置Maven环境路径2.png"></p><ol start="3"><li>配置本地仓库：修改 conf/setting.xml 中的 <code>&lt;localRepository&gt;</code> 为其指定一个目录</li></ol><p><img data-src="https://s2.loli.net/2022/12/03/XxrK3vGfNjqcA1T.png" alt="06-指定本地仓库路径.png"></p><p>注意：为了保守起见，在 Intellij 中也对 Maven 的本地路径配置一下：)<br><img data-src="https://s2.loli.net/2022/12/03/LjZ7q38RftUCYig.png" alt="12-指定本地仓库路径2.png"></p><ol start="4"><li>配置阿里云私服：修改 conf/setting.xml 中的 <code>&lt;mirrors&gt;</code> 标签，为其添加如下子标签 </li></ol><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><img data-src="https://s2.loli.net/2022/12/03/XWRcT5hMvpO7Aur.png" alt="07-配置阿里云远程仓库.png"></p><h3 id="Maven-的基本使用"><a href="#Maven-的基本使用" class="headerlink" title="Maven 的基本使用"></a>Maven 的基本使用</h3><h4 id="Maven-的常用命令"><a href="#Maven-的常用命令" class="headerlink" title="Maven 的常用命令"></a>Maven 的常用命令</h4><ul><li>compile：编译</li><li> clean：清理，删除前面编译产生的 target 目录</li><li> test：测试，执行 test 文件夹下的代码</li><li> package：打包</li><li> install：安装</li></ul><p>在含有 pom.xml 文件的目录下，进入 PowerShell</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mvn compile</span><br><span class="line">mvn clean</span><br><span class="line">mvn package</span><br><span class="line">mvn tast</span><br><span class="line">mvn install</span><br></pre></td></tr></tbody></table></figure><h3 id="Maven-的生命周期"><a href="#Maven-的生命周期" class="headerlink" title="Maven 的生命周期"></a>Maven 的生命周期</h3><p>Maven 对项目构建的生命周期划分为三套</p><ul><li>clean：清理工作</li><li> default：核心工作，例如编译，测试，打包，安装等</li><li> site：产生报告，发布站点等</li></ul><p><img data-src="https://s2.loli.net/2022/12/03/EQ7SK6XnLpfkJhw.png" alt="08-Maven的生命周期.png"></p><p>比如说执行 install，就会自动执行 compile，但是不会自动执行 clean（因为这是两套不同的生命周期）</p><h3 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h3><p>使用坐标导入 jar 包</p><ol><li>在 pom.xml 中编写 <code>&lt;dependencies&gt;</code> 标签</li><li>在 <code>&lt;dependencies&gt;</code> 标签中使用 <code>&lt;dependency&gt;</code> 来引入坐标</li><li>定义坐标的 groupId，artifactId，version</li><li> 点击刷新按钮，是坐标生效（或者对 IDE 进行配置，每次变更自动生效）</li></ol><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 导入 mysql 驱动jar包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.32<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>比如去找 MySQL 的 Maven 配置信息（浏览器搜索 <code>mysql maven</code>），比如从以下网页中找到了：<a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java/6.0.6">MySQL Connector Java</a></p><p>还为我们提供了 maven 需要使用的信息<br><img data-src="https://s2.loli.net/2022/12/03/GWJwatOcH9zZRyj.png" alt="09-从官网获得Maven的配置信息.png"></p><h3 id="快速导入坐标信息到-pom-xml"><a href="#快速导入坐标信息到-pom-xml" class="headerlink" title="快速导入坐标信息到 pom.xml"></a>快速导入坐标信息到 pom.xml</h3><p>如果本地仓库就有相应的 jar 包，那么直接可以通过搜索 jar 包的名字来导入（即可自动导入模板）</p><ol><li>在 pom.xml 文件中，Alt+Insert</li><li> 选择依赖项模板，自动为我们添加模板</li></ol><p><img data-src="https://s2.loli.net/2022/12/03/sifvKxMy7mGwtXg.png" alt="10-快速插入依赖项模板.png"></p><h3 id="依赖范围"><a href="#依赖范围" class="headerlink" title="依赖范围"></a>依赖范围</h3><p>通过设置坐标依赖范围（scope），可以设置对应 jar 包的作用范围：编译环境、测试环境、运行环境</p><p>编译环境：在主工程 java 文件夹中可以使用<br>测试环境：在测试文件夹 test 中可以使用<br>运行环境：</p><p>依赖范围的取值有以下六种，默认值是 compile（其实范围也是最大的）</p><p><img data-src="https://s2.loli.net/2022/12/03/SmNG1MQ5OJzElh6.png" alt="11-依赖范围.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Maven主要功能&quot;&gt;&lt;a href=&quot;#Maven主要功能&quot; class=&quot;headerlink&quot; title=&quot;Maven主要功能&quot;&gt;&lt;/a&gt;Maven 主要功能&lt;/h3&gt;&lt;p&gt;Maven 是专门用于管理和构建 Java 项目的工具，它的主要功能有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供了一套标准化的项目结构&lt;/li&gt;
&lt;li&gt;提供了一套标准化的构建流程（编译，测试，打包，发布…）&lt;/li&gt;
&lt;li&gt;提供了一套依赖管理机制&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="Maven" scheme="https://coffeelize.top/tags/Maven/"/>
    
    <category term="java" scheme="https://coffeelize.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>IDEA 中创建 Maven Web 项目</title>
    <link href="https://coffeelize.top/posts/7e53c240.html"/>
    <id>https://coffeelize.top/posts/7e53c240.html</id>
    <published>2022-12-01T03:28:30.000Z</published>
    <updated>2022-12-05T09:47:38.606Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="了解-Web-项目结构"><a href="#了解-Web-项目结构" class="headerlink" title="了解 Web 项目结构"></a>了解 Web 项目结构</h3><p>Maven Web 开发中的项目，项目结构如下图所示<br><img data-src="https://s2.loli.net/2022/12/05/vUzchCrRsbK3YFm.png" alt="01.Web项目结构及说明.png"></p><span id="more"></span><h3 id="IDEA-中创建-Maven-Web-项目"><a href="#IDEA-中创建-Maven-Web-项目" class="headerlink" title="IDEA 中创建 Maven Web 项目"></a>IDEA 中创建 Maven Web 项目</h3><p>下面介绍两种方式来创建 Maven Web 项目</p><h4 id="一、使用骨架的方式"><a href="#一、使用骨架的方式" class="headerlink" title="一、使用骨架的方式"></a>一、使用骨架的方式</h4><ol><li>新建模块，选择 Maven Archetype；Archetype 中选择 maven-archetype-webapp，点击创建即可创建 Maven Web 项目</li></ol><p><img data-src="https://s2.loli.net/2022/12/05/mZSa71ywrOfAtq9.png" alt="02-通过Maven骨架的方式新建Maven Web项目.png"></p><ol start="2"><li>删除 pom.xml 文件中多余的坐标</li><li>补齐 java 文件夹</li></ol><p>通过骨架创建的项目，目录结构如图所示。main 文件夹下少了一个 java 文件夹，需要我们手动创建一个 java 的文件夹<br><img data-src="https://s2.loli.net/2022/12/05/ya8sGRgMNCPQ9dc.png" alt="03-缺少Java文件夹.png"></p><h4 id="二、不使用骨架"><a href="#二、不使用骨架" class="headerlink" title="二、不使用骨架"></a>二、不使用骨架</h4><ol><li>新建模块，新建 Maven 项目</li><li>在 pom.xml 文件中设置打包方式为 war 包的打包方式，刷新一下文件（此时项目可变为 Web 项目）</li></ol><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>点击项目结构，Facets，选择创建的项目，操作如下图所示</li></ol><p><img data-src="https://s2.loli.net/2022/12/05/SQ1hfu45Gc8MrVz.png" alt="04-添加Web资源目录.png"></p><ol start="4"><li>创建 web.xml 文件，如下图所示（注：创建的时候不补齐路径也是可以的：创建完成之后，将文件直接拖动到 webapp 的路径下就行）<br><img data-src="https://s2.loli.net/2022/12/05/reh957vW8EVqfDH.png" alt="05-创建Web.xml文件.png"></li></ol><p>完整的项目结构如下<br><img data-src="https://s2.loli.net/2022/12/05/ld4WjNbfuRQwcen.png" alt="06-创建成功后项目完整的目录结构.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;了解-Web-项目结构&quot;&gt;&lt;a href=&quot;#了解-Web-项目结构&quot; class=&quot;headerlink&quot; title=&quot;了解 Web 项目结构&quot;&gt;&lt;/a&gt;了解 Web 项目结构&lt;/h3&gt;&lt;p&gt;Maven Web 开发中的项目，项目结构如下图所示&lt;br&gt;&lt;img data-src=&quot;https://s2.loli.net/2022/12/05/vUzchCrRsbK3YFm.png&quot; alt=&quot;01.Web项目结构及说明.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://coffeelize.top/tags/Java/"/>
    
    <category term="Maven" scheme="https://coffeelize.top/tags/Maven/"/>
    
    <category term="Intellij" scheme="https://coffeelize.top/tags/Intellij/"/>
    
  </entry>
  
  <entry>
    <title>VScode 配置 md 模板</title>
    <link href="https://coffeelize.top/posts/4f56e65f.html"/>
    <id>https://coffeelize.top/posts/4f56e65f.html</id>
    <published>2022-11-30T08:38:38.000Z</published>
    <updated>2022-12-01T15:30:57.125Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>需要使用 VScode 来编辑 md 文件，并且希望每次在创建 md 文档时，都能够自动补全 YAML 文件信息</p><span id="more"></span><h3 id="配置-setting-json-文件"><a href="#配置-setting-json-文件" class="headerlink" title="配置 setting.json 文件"></a>配置 setting.json 文件</h3><ol><li>Ctrl+Shift+P，搜索 setting，选择 <code>首选项：打开用户设置 (json)</code></li><li>在这给文件中添加如下代码 </li></ol><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"[markdown]"</span>:  {  </span><br><span class="line">    <span class="attr">"editor.quickSuggestions"</span>: <span class="literal">true</span>  </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>以下图片显示的是之前就对 setting.json 文件配置过，找到 markdown 的位置添加上述的那一行代码即可；如果之前没有配置过，只需要将上述的那一串代码全部复制到下图中最大的一对黄括号中即可<br><img data-src="https://s2.loli.net/2022/11/30/4GztnFY2WcTpmJa.png" alt="配置SettingJson.png"></p><h3 id="配置-md-模板"><a href="#配置-md-模板" class="headerlink" title="配置 md 模板"></a>配置 md 模板</h3><p><img data-src="https://s2.loli.net/2022/11/30/vV6rAHzYCo8EZk3.png" alt="01-VScode配置用户代码片段.png"></p><ol><li>Ctrl+Shift+P，搜索 snippets，选则 <code>配置用户代码片段</code>，再选择 <code>markdown</code></li><li>将一下代码复制进去保存</li><li>新建 md 文档之后，输入 <code>log</code> 敲 tab 即可自动补全配置好的模板 </li></ol><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line"> <span class="comment">// Place your snippets for markdown here. Each snippet is defined under a snippet name and has a prefix, body and</span></span><br><span class="line"> <span class="comment">// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:</span></span><br><span class="line"> <span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the</span></span><br><span class="line"> <span class="comment">// same ids are connected.</span></span><br><span class="line"> <span class="comment">// Example:</span></span><br><span class="line"> <span class="comment">// 联想时显示的文字内容</span></span><br><span class="line"> <span class="attr">"create blog"</span>: {</span><br><span class="line">   <span class="attr">"prefix"</span>: <span class="string">"log"</span>, <span class="comment">// 输入log，即显示模板提示</span></span><br><span class="line">   <span class="attr">"body"</span>: [</span><br><span class="line">  <span class="comment">// body里是模板内容</span></span><br><span class="line">  <span class="string">"---"</span>,</span><br><span class="line">  <span class="string">"title: $1"</span>, <span class="comment">// $1表示生成模板后，光标最先在此位置</span></span><br><span class="line">  <span class="string">"date: $2"</span>, <span class="comment">// $2表示，在$1处输入完成后，按tab键，光标便跳转到这里，以此类推</span></span><br><span class="line">  <span class="string">"tags:"</span>,</span><br><span class="line">  <span class="string">"  - $3"</span>,</span><br><span class="line">  <span class="string">"---"</span>,</span><br><span class="line">  <span class="string">""</span>,</span><br><span class="line">   ],</span><br><span class="line">   <span class="attr">"description"</span>: <span class="string">"blog模板"</span></span><br><span class="line"> }</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>个人博客：<a href="http://allanhao.com/2022/07/17/2022-07-17-vscode-markdown/">VSCode 配置 Markdown 模板 | AllanHao</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h3&gt;&lt;p&gt;需要使用 VScode 来编辑 md 文件，并且希望每次在创建 md 文档时，都能够自动补全 YAML 文件信息&lt;/p&gt;</summary>
    
    
    
    
    <category term="markdown" scheme="https://coffeelize.top/tags/markdown/"/>
    
    <category term="VScode" scheme="https://coffeelize.top/tags/VScode/"/>
    
  </entry>
  
  <entry>
    <title>Visio 的一些科研绘图技巧</title>
    <link href="https://coffeelize.top/posts/659137c6.html"/>
    <id>https://coffeelize.top/posts/659137c6.html</id>
    <published>2022-11-30T08:06:40.000Z</published>
    <updated>2022-12-03T15:32:49.175Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="导出高清图片"><a href="#导出高清图片" class="headerlink" title="导出高清图片"></a>导出高清图片</h3><p>导出图片时的关键设置</p><ol><li>颜色格式设置为 256 位</li><li>分辨率设置为打印机模式</li></ol><span id="more"></span><h3 id="绘制圆角箭头"><a href="#绘制圆角箭头" class="headerlink" title="绘制圆角箭头"></a>绘制圆角箭头</h3><p>有时候直接使用直线工具绘制箭头比自带的箭头工具好用得多，一下图片中演示的就是使用直线工具来绘制箭头<br><img data-src="https://s2.loli.net/2022/11/30/Ph3jGZ1o5XQbta2.gif" alt="Visio绘制圆角箭头.gif"></p><h3 id="格式刷的应用"><a href="#格式刷的应用" class="headerlink" title="格式刷的应用"></a>格式刷的应用</h3><p>比下图所示，箭头可以通过格式化统一成一致的样式<br><img data-src="https://s2.loli.net/2022/11/30/FsupNOYVwTB35d1.gif" alt="Visio使用格式刷绘制箭头.gif"></p><h3 id="粘贴到-word-中白边太宽"><a href="#粘贴到-word-中白边太宽" class="headerlink" title="粘贴到 word 中白边太宽"></a>粘贴到 word 中白边太宽</h3><p>将 Visio 图直接粘贴到 Word 中时，可能会遇到 Visio 图片显示不全的情况。word 中双击这个 Visio 对象，可以按住 control/Ctrl 键，拖动画布边缘，调整画布尺寸至合适大小，鼠标离开 Visio 对象编辑区域单击即可自动保存</p><h3 id="visio-取消首字母自动大写"><a href="#visio-取消首字母自动大写" class="headerlink" title="visio 取消首字母自动大写"></a>visio 取消首字母自动大写</h3><p><img data-src="https://s2.loli.net/2022/11/30/TMo2lqfrWc8nEDO.png" alt="Visio取消首字母自动大写.png"></p><h3 id="两形状之间直的连接线"><a href="#两形状之间直的连接线" class="headerlink" title="两形状之间直的连接线"></a>两形状之间直的连接线</h3><p>这种情况有两种解决办法：</p><ol><li>微调：选中下面的矩形通过 shift + 方向键 微调来完成</li><li>对齐：选中整个图形，选择排列，选中水平居中进行调整即可</li><li>对不齐的时候，试试按着 Alt 键拖动形状试试：)</li></ol><h3 id="绘图时保证图片与文字大小协调"><a href="#绘图时保证图片与文字大小协调" class="headerlink" title="绘图时保证图片与文字大小协调"></a>绘图时保证图片与文字大小协调</h3><ol><li>首先输入 8-12 号的字体，插入图片调整至和文字协调的大小（图片尽可能是由大图调整至小图），也就是说图片的大小按照标准的文字大小进行调整</li><li>最好提前想好这张图在投稿时是打算单栏排版还是双栏排版，或者两个排版方式各导出一张</li><li>图片更新时，最好在同一个 Visio 文件中新建页面，在新建的页面中对图片进行编辑，保存旧版本图片</li></ol><h3 id="辅助线"><a href="#辅助线" class="headerlink" title="辅助线"></a>辅助线</h3><p>从标尺处拖拉可添加辅助线</p><h3 id="连接线与线条"><a href="#连接线与线条" class="headerlink" title="连接线与线条"></a>连接线与线条</h3><p>能用线条的地方尽量不要用连接线。连接线通常用来连接两个形状，但是这两个形状位置或大小发生变化或者整张大图的比例需要调整时，这个连接线就会自动更着变化，非常容易导致排版问题。连续画几条线条，这几条线条会自动连接在一起，并且在属性中也可以设置圆角，箭头等属性，这样已经完全可以实现连接线的功能了，所以，尽可能不要再绘图中使用连接线。</p><h3 id="编辑Xmind导出的形状"><a href="#编辑Xmind导出的形状" class="headerlink" title="编辑Xmind导出的形状"></a>编辑 Xmind 导出的形状</h3><ol><li>Xmind 导出形状为 SVG 格式</li><li> Visio 自带 SVG 格式编辑功能</li><li>还是矢量图格式的，妙啊！</li></ol><h3 id="Visio2PPT"><a href="#Visio2PPT" class="headerlink" title="Visio2PPT"></a>Visio2PPT</h3><p>直接框选复制到 ppt 当中，会自动转换为 emf 格式的矢量图片，而且背景是透明的哦，不会受 vision 背景底图的影响</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;导出高清图片&quot;&gt;&lt;a href=&quot;#导出高清图片&quot; class=&quot;headerlink&quot; title=&quot;导出高清图片&quot;&gt;&lt;/a&gt;导出高清图片&lt;/h3&gt;&lt;p&gt;导出图片时的关键设置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;颜色格式设置为 256 位&lt;/li&gt;
&lt;li&gt;分辨率设置为打印机模式&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    
    <category term="绘图" scheme="https://coffeelize.top/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Visio" scheme="https://coffeelize.top/tags/Visio/"/>
    
    <category term="科研" scheme="https://coffeelize.top/tags/%E7%A7%91%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>Interllij 自动补齐 foreach</title>
    <link href="https://coffeelize.top/posts/2aafebc1.html"/>
    <id>https://coffeelize.top/posts/2aafebc1.html</id>
    <published>2022-11-29T13:37:23.000Z</published>
    <updated>2022-11-29T14:16:04.757Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>输入 for，选择 <code>foreach</code> 敲 Tab，intellij 为我们自动补齐如下代码</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (:  </span><br><span class="line">     ) {  </span><br><span class="line">      </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>能不能够在智能一些呢，比如根据上面的代码自动补齐更多的信息</p><p>敲入 <code>iter</code> Tab 键 补齐即可</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Annotation[] annotations = clazz.getAnnotations();  </span><br><span class="line"><span class="comment">//以下为敲入iter自动补齐的内容</span></span><br><span class="line"><span class="keyword">for</span> (Annotation annotation : annotations) {  </span><br><span class="line">      </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html"></summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>高质量 Anki 插件存档</title>
    <link href="https://coffeelize.top/posts/ebcbef66.html"/>
    <id>https://coffeelize.top/posts/ebcbef66.html</id>
    <published>2022-11-29T03:53:47.000Z</published>
    <updated>2022-12-03T15:37:52.988Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>插件官网： <a href="https://ankiweb.net/shared/addons/2.1">Add-ons for Anki 2.1</a></p><h3 id="个人推荐"><a href="#个人推荐" class="headerlink" title="个人推荐"></a>个人推荐</h3><ul><li>Review Heatmap： <a href="https://ankiweb.net/shared/info/1771074083">Review Heatmap</a></li><li> 缩放 Anki 界面： <a href="https://ankiweb.net/shared/info/538879081">Anki Zoom</a></li><li> 查看卡片时编辑卡片： <a href="https://ankiweb.net/shared/info/1020366288">Edit Field During Review</a></li><li> 和网页插件等搭配使用： <a href="https://ankiweb.net/shared/info/2055492159">AnkiConnect</a></li><li> 视频制卡： <a href="https://ankiweb.net/shared/info/1213145732">Create subs2srs cards with mpv video player</a></li><li> 图形遮挡： <a href="https://ankiweb.net/shared/info/1374772155">Image Occlusion Enhanced</a></li><li> 快速添加单词各字段信息： <a href="https://ankiweb.net/shared/info/1807206748">Fast Word Query: Multi-threaded queries for words from local or web dictionaries</a></li></ul><p>Anki 旧版本使用的插件</p><ul><li>添加卡片时固定字段（现已内置，无需安装）： <a href="https://ankiweb.net/shared/info/516643804">Frozen Fields</a></li></ul><h3 id="了解更多"><a href="#了解更多" class="headerlink" title="了解更多"></a>了解更多</h3><ul><li>The Anking：<a href="https://www.ankipalace.com/best-add-ons">Best Anki Add-ons</a> 清单</li></ul>]]></content>
    
    
      
      
    <summary type="html"></summary>
      
    
    
    
    
    <category term="Anki" scheme="https://coffeelize.top/tags/Anki/"/>
    
  </entry>
  
  <entry>
    <title>LaTeX 自定义列表环境</title>
    <link href="https://coffeelize.top/posts/18fc56c9.html"/>
    <id>https://coffeelize.top/posts/18fc56c9.html</id>
    <published>2022-11-29T03:49:47.000Z</published>
    <updated>2022-11-30T03:10:47.167Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>注：本文内容的主体结构转载自博客园 <a href="https://www.cnblogs.com/ahhylau/p/4586167.html">LaTeXmath：LaTeX 中列表环境的使用</a>，本人仅对案例中的一些代码、图片及一些宏包的使用做了一些补充。</p><p>列表就是将所要表达的内容分为若干个条目并按一定的顺序排列，达到简明、直观的效果。LaTeX 中常见的列表环境有&nbsp;enumerate、itemize 和 description。这三种列表环境的主要区别是列表项标签的不同：</p><span id="more"></span><p>有序列表和无序列表无需在进行介绍，对于 description 列表来说，可指定其标签</p><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>{ctexart}</span><br><span class="line"><span class="keyword">\usepackage</span>{pifont} </span><br><span class="line"><span class="keyword">\begin</span>{document}</span><br><span class="line"> <span class="keyword">\begin</span>{description}</span><br><span class="line">  <span class="keyword">\item</span>[<span class="keyword">\ding</span>{47}] This is the first item</span><br><span class="line">  <span class="keyword">\item</span>[<span class="keyword">\ding</span>{47}] This is the second item</span><br><span class="line">  <span class="keyword">\item</span>[<span class="keyword">\ding</span>{47}] This is the third item</span><br><span class="line"> <span class="keyword">\end</span>{description}</span><br><span class="line"><span class="keyword">\end</span>{document}</span><br></pre></td></tr></tbody></table></figure><p><img data-src="https://s2.loli.net/2022/07/01/riNZI4RMPheTu9o.png" alt="01-指定description标签.png"></p><p>了解关于 pifont 宏包的更多信息，请参考：<a href="https://ctan.org/pkg/pifont">pifont – Access to PostScript standard Symbol and Dingbats fonts</a>，如下为 pifont 的一些字符</p><p><img data-src="https://s2.loli.net/2022/07/01/2PuBr5ezGCqi1cT.png" alt="02-pifont的一些字符.png"></p><p>或者参阅以下的简要信息快速了解 pifont 宏包</p><blockquote><p>The package provides commands for Pi fonts (Dingbats, Symbol, etc.); all commands assume you know the character number within the font of the symbol within the font.</p></blockquote><p>列表环境也可以互相嵌套，默认情况下不同层级的标签不同，以体现分级层次。</p><h3 id="进阶用法"><a href="#进阶用法" class="headerlink" title="进阶用法"></a>进阶用法</h3><p>可参考个人博客：<a href="https://syvshc.github.io/2021-12-05-length-in-enumitem/">enumitem 宏包中的长度设置</a> @无锤乙醇</p><p>以如下代码对自定义列表环境进行案例分析:</p><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>{ctexart}</span><br><span class="line"><span class="keyword">\usepackage</span>{enumerate}</span><br><span class="line"><span class="keyword">\usepackage</span>{enumitem}</span><br><span class="line"><span class="keyword">\setlist</span>[enumerate,1]{label=(<span class="keyword">\arabic</span>*).,font=<span class="keyword">\textup</span>,</span><br><span class="line"> leftmargin=7mm,labelsep=1.5mm,topsep=0mm,itemsep=-0.8mm}</span><br><span class="line"><span class="keyword">\setlist</span>[enumerate,2]{label=(<span class="keyword">\alph</span>*).,font=<span class="keyword">\textup</span>,</span><br><span class="line"> leftmargin=7mm,labelsep=1.5mm,topsep=-0.8mm,itemsep=-0.8mm}</span><br><span class="line"><span class="keyword">\begin</span>{document}</span><br><span class="line"> <span class="keyword">\begin</span>{enumerate}</span><br><span class="line">  <span class="keyword">\item</span> 这是一个一级列表</span><br><span class="line">  <span class="keyword">\item</span> 看我在嵌套一个二级列表</span><br><span class="line">    <span class="keyword">\begin</span>{enumerate}</span><br><span class="line">     <span class="keyword">\item</span> 这是一个二级列表</span><br><span class="line">    <span class="keyword">\end</span>{enumerate}</span><br><span class="line"> <span class="keyword">\end</span>{enumerate}</span><br><span class="line"><span class="keyword">\end</span>{document}</span><br></pre></td></tr></tbody></table></figure><p>&nbsp;<code>\setlist[enumerate,1]</code>&nbsp;表示对一级列表进行设置，<code>\setlist[enumerate,2]</code>&nbsp;表示对二级列表进行设置。这样一级列表的标签就是括号加阿拉伯数字加点，二级标签是括号加小写英文字母加点。输出效果为：</p><p><img data-src="https://s2.loli.net/2022/07/01/loZxCdTE8hAVD74.png" alt="04-自定义修改列表样式.png"></p><p><code>font=\textup</code> 表示使用直立体（可参考官方入门手册）</p><p><img data-src="https://s2.loli.net/2022/07/01/xiAoPaI8DqOQ7mU.png" alt="05-字体命令.png"></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>个人博客：<a href="https://syvshc.github.io/2021-12-05-length-in-enumitem/">enumitem 宏包中的长度设置</a> @无锤乙醇</li><li>博客园：<a href="https://www.cnblogs.com/ahhylau/p/4586167.html">LaTeX 中列表环境的使用</a> @LaTeXmath</li><li>Latex 官方入门手册：一份（不太）简短的 LaTeX2ε 介绍</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;p&gt;注：本文内容的主体结构转载自博客园 &lt;a href=&quot;https://www.cnblogs.com/ahhylau/p/4586167.html&quot;&gt;LaTeXmath：LaTeX 中列表环境的使用&lt;/a&gt;，本人仅对案例中的一些代码、图片及一些宏包的使用做了一些补充。&lt;/p&gt;
&lt;p&gt;列表就是将所要表达的内容分为若干个条目并按一定的顺序排列，达到简明、直观的效果。LaTeX 中常见的列表环境有&amp;nbsp;enumerate、itemize 和 description。这三种列表环境的主要区别是列表项标签的不同：&lt;/p&gt;</summary>
    
    
    
    
    <category term="Latex" scheme="https://coffeelize.top/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>以 Markdown 撰写文稿，以 LaTeX 排版</title>
    <link href="https://coffeelize.top/posts/23aacf40.html"/>
    <id>https://coffeelize.top/posts/23aacf40.html</id>
    <published>2022-11-29T03:19:57.000Z</published>
    <updated>2022-12-03T15:40:42.306Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>个人博客： <a href="https://liam.page/2020/03/30/writing-manuscript-in-Markdown-and-typesetting-with-LaTeX/">以 Markdown 撰写文稿，以 LaTeX 排版</a> </li></ul><h3 id="简介以及基本用法"><a href="#简介以及基本用法" class="headerlink" title="简介以及基本用法"></a>简介以及基本用法</h3><p>请参考<a href="https://liam.page/2020/03/30/writing-manuscript-in-Markdown-and-typesetting-with-LaTeX/">以 Markdown 撰写文稿，以 LaTeX 排版</a></p><h3 id="最小实例"><a href="#最小实例" class="headerlink" title="最小实例"></a>最小实例</h3><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>{ctexart}</span><br><span class="line"><span class="keyword">\usepackage</span>{markdown}</span><br><span class="line"><span class="keyword">\begin</span>{document}</span><br><span class="line"> <span class="keyword">\begin</span>{markdown}</span><br><span class="line"></span><br><span class="line">1.markdown内容顶格写</span><br><span class="line">2.空行检查是否有多余的Tab缩进</span><br><span class="line">3.请使用PowerShell进行编译，无法在TexStudio中的运行进行编译</span><br><span class="line"></span><br><span class="line"> <span class="keyword">\end</span>{markdown}</span><br><span class="line"><span class="keyword">\end</span>{document}</span><br></pre></td></tr></tbody></table></figure><span id="more"></span><p><img data-src="https://s2.loli.net/2022/11/29/kylrxgY8iqMuvAn.gif" alt="markdown2latex.gif"></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>在含有 tex 源文件的目录下使用 Powershell 对如下命令进行编译 </li></ol><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xelatex --shell-escape texname.tex</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>使用 markdown 宏包之后，需要在 markdown 环境中书写 markdown 内容</li><li> markdown 内容做到左侧无缩进（靠左侧顶格写）</li><li>同其他普通的 tex 文档一样，可以使用定制样式的文档类或宏包</li></ol><p>比如可以使用我们喜欢的文档类，只要将相应的 cls 文件复制到同一目录下，在导言区引用即可</p><figure class="highlight tex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[cn,normal,11pt,blue]{elegantnote}</span><br></pre></td></tr></tbody></table></figure><h3 id="可能会出现的问题"><a href="#可能会出现的问题" class="headerlink" title="可能会出现的问题"></a>可能会出现的问题</h3><ol><li>二级列表也顶格写的话就会变成一级列表</li></ol><p>解决办法：在二级列表的前面添加四个空格，而不是增加一个 tab 键</p><ol start="2"><li>Markdown 中含有繁体中文时，输出的 PDF 中繁体中文显示会有问题</li><li>网页中带有中文字符等特殊符号时，会自动转义导致网页链接出错</li></ol><p>解决办法：使用短链接，比如 Github：<a href="https://github.com/icowan/shorter">shorter</a>，或者 Github：<a href="https://github.com/imfycc/short_url">short_url</a></p><ol start="4"><li> 图片大小渲染问题，请参考：<a href="https://liam.page/2020/03/30/writing-manuscript-in-Markdown-and-typesetting-with-LaTeX/">以 Markdown 撰写文稿，以 LaTeX 排版</a> </li></ol>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;个人博客： &lt;a href=&quot;https://liam.page/2020/03/30/writing-manuscript-in-Markdown-and-typesetting-with-LaTeX/&quot;&gt;以 Markdown 撰写文稿，以 LaTeX 排版&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;简介以及基本用法&quot;&gt;&lt;a href=&quot;#简介以及基本用法&quot; class=&quot;headerlink&quot; title=&quot;简介以及基本用法&quot;&gt;&lt;/a&gt;简介以及基本用法&lt;/h3&gt;&lt;p&gt;请参考&lt;a href=&quot;https://liam.page/2020/03/30/writing-manuscript-in-Markdown-and-typesetting-with-LaTeX/&quot;&gt;以 Markdown 撰写文稿，以 LaTeX 排版&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;最小实例&quot;&gt;&lt;a href=&quot;#最小实例&quot; class=&quot;headerlink&quot; title=&quot;最小实例&quot;&gt;&lt;/a&gt;最小实例&lt;/h3&gt;&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;\documentclass&lt;/span&gt;{ctexart}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;\usepackage&lt;/span&gt;{markdown}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;\begin&lt;/span&gt;{document}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;\begin&lt;/span&gt;{markdown}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.markdown内容顶格写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.空行检查是否有多余的Tab缩进&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.请使用PowerShell进行编译，无法在TexStudio中的运行进行编译&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;\end&lt;/span&gt;{markdown}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;\end&lt;/span&gt;{document}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
    <category term="Latex" scheme="https://coffeelize.top/tags/Latex/"/>
    
    <category term="Markdown" scheme="https://coffeelize.top/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>删除 Mac 系统自带的 ABC 输入法</title>
    <link href="https://coffeelize.top/posts/ebcbef66.html"/>
    <id>https://coffeelize.top/posts/ebcbef66.html</id>
    <published>2022-11-29T02:59:47.000Z</published>
    <updated>2022-11-30T03:18:55.849Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>操作的具体细节请参考：<a href="https://ssnhd.com/2022/01/01/mac-inputdel/">Mac 删除原生 ABC 英文输入法</a>。需要补充的是：可以使用 PlistEdit 替代 Xcode 的功能，因为 Xcode 实在是太大了</p><span id="more"></span><p>从此远离切换窗口之后自动切换到系统 ABC 输入法的苦恼了</p><p><img data-src="https://s2.loli.net/2022/11/29/Mn2D3SqUBVmuEHb.png" alt="删除Mac系统自带的ABC输入法.png"></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>个人博客：<a href="https://ssnhd.com/2022/01/01/mac-inputdel/">Mac 删除原生 ABC 英文输入法</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;操作&quot;&gt;&lt;a href=&quot;#操作&quot; class=&quot;headerlink&quot; title=&quot;操作&quot;&gt;&lt;/a&gt;操作&lt;/h3&gt;&lt;p&gt;操作的具体细节请参考：&lt;a href=&quot;https://ssnhd.com/2022/01/01/mac-inputdel/&quot;&gt;Mac 删除原生 ABC 英文输入法&lt;/a&gt;。需要补充的是：可以使用 PlistEdit 替代 Xcode 的功能，因为 Xcode 实在是太大了&lt;/p&gt;</summary>
    
    
    
    
    <category term="Mac" scheme="https://coffeelize.top/tags/Mac/"/>
    
  </entry>
  
</feed>
